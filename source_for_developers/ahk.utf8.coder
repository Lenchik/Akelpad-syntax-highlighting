;----------------------------------------------;
;           Coder plugin syntax file           ;
;----------------------------------------------;

; Colors
;	Color need to be in #RRGGBB format.
;	If color equal to zero, then color ignored.
;
; Font styles
;	0  ignored.
;	1  normal.
;	2  bold.
;	3  italic.
;	4  bold italic.
;
; For comfort file viewing/editing set tab size to 8 or higher.

; Last modification: 2014.09.14 16:59:05.
; Tested with AkelPad 4.9.0 (x64) with Coder 13.9 plugin.
; AutoHotkey syntax file.
; Authors: Lenchik, Drugoy a.k.a. Drugmix.
; http://akelpad.sourceforge.net/files/plugs/Coder/ahk.coder
; https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/ahk.coder - working version
; https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/source_for_developers/ahk.utf8.coder - development version in UTF-8 for easier development on GitHub, please post your suggestions in this file.
; Based on ahk.highlight, ahk.codefold, autohotkey.vim, SciTE4AutoHotkey v3 beta4 Portable ahk syntax highlighting and Ace (Ajax.org Cloud9 Editor) ahk syntax highlighting.

; <2014-09-14>
; All QuotesRE rules were re-written for compatibility with the newer AkelPad version. Not yet tested much. Not all yet converted (only commands, no operators and other stuff).

; <2014-02-18>
; Added a few rules to cover most of non-command highlighting.
; Added "Finally" statement handling (it was added in a recent AHK update).
; Made "If" rule more flexible, but didn't do the same for the rest of the rules.
; I might be sooo wrong about too specific rules: they don't get highlighted if the value is used through an expression/variable. That's rarely used, but still an issue. Might consider undoing it by making rules more general back again.
; Need to find a way to properly handle commas inside of dereferenced attributes.

; <2014-02-08>
; Filled "QuotesRE:" section with per-command rules.
; Small fixes in "Blocks:" section.
; Removed colors from everything from "Words:" and "Delimiters:" sections.

; <2014-01-11>
; Fixed bug in "Quotes:" section when comments were not recognized if there was no space after semicolon.
; Added 2 missing delimiters
; Added 4 words, changed "Until" and "While" to be styled as conditions.
; Removed words related to AutoIt syntax.
; Restored some removed non-AutoIt, yet commented words).
; Updated "Folds" section to remove visual noise caused by folds for every pair of brackets. Now the folds are used only for the brackets preceded by a semicolon.
; Enriched "Blocks:" section with full phrases to be autocompleted.

; <2013-10-10>
; Removed stuff that got pasted along together with autocomplete rules.
; Added escaped chars with default escaping char (which is backtick) as delimiters.

; <2013-08-24>
; Added pre-typed arguments for autocomplete rules.
; Fixed Object-related functions (they seem to not require Object as first param anymore).
; Fixed caret position for functions that don't accept any arguments at all.

; <2013-08-10>
; Commented out keywords from non-AHK syntax.
; Added all the missing commands, attributes and functions.
; Added smart autocomplete rules for each command and function.
; Added a few missing hotkeys.

; <2013-08-04>
; Added semi-smart colorization for text in quotes (so you can distinguish expressions from strings).

; <2013-07-06>
; Added autocomplete rules for conditions and loops.

; <2013-07-02>
; Comments rules updated.

; <2013-06-29>
; Added more folding rules.

Files:
;==========
; File types
;==========
*.ahk

;----------------------------------------------;
;                  HighLight                   ;
;----------------------------------------------;

;Flags (sum of the members)
;     1  case sensitive.
;     2  word is a composition of characters ("Words:" section only). Example: "0123456789" - highlight words that contain only digits.
;     4  quote end required ("Quotes:" section only).
;     8  quote start string is ignored and last meet delimiter used as quote start ("Quotes:" section only).
;    16  quote end string is ignored and first meet delimiter used as quote end ("Quotes:" section only).
;    32  don't highlight quote start ("Quotes:" section only).
;    64  don't highlight quote end ("Quotes:" section only).
;   128  don't catch and don't highlight quote start ("Quotes:" section only).
;   256  don't catch and don't highlight quote end ("Quotes:" section only).
;   512  quote start, delimiter or word located at line start.
;  1024  quote end, delimiter or word located at line end.
;  2048  quote start is surrounded with delimiters ("Quotes:" section only).
;  4096  quote end is surrounded with delimiters ("Quotes:" section only).
;  8192  quote doesn't contain delimiters ("Quotes:" section only).
; 16384  only quote start string is catched ("Quotes:" section only).
; 32768  quote doesn't contain any character ("Quotes:" section only).
;Флаги (сумма членов)
;     1  учитывать регистр.
;     2  словом является любая комбинация указанных символов (только для секции "Words:"). Пример: "0123456789" - подсвечивать числа.
;     4  нахождение конца диапазона обязательно (только для секции "Quotes:").
;     8  параметр начала диапазона игнорируется и последний встретившийся разделитель используется как начало диапазона (только для секции "Quotes:").
;    16  параметр конца диапазона игнорируется и первый встретившийся разделитель используется как конец диапазона (только для секции "Quotes:").
;    32  не подсвечивать начало диапазона (только для секции "Quotes:").
;    64  не подсвечивать конец диапазона (только для секции "Quotes:").
;   128  не захватывать и не подсвечивать начало диапазона (только для секции "Quotes:").
;   256  не захватывать и не подсвечивать конец диапазона (только для секции "Quotes:").
;   512  начало диапазона, разделителя или слова находится в начале строки.
;  1024  конец диапазона, разделителя или слова находится в конце строки.
;  2048  начало диапазона находится между разделителями (только для секции "Quotes:").
;  4096  конец диапазона находится между разделителями (только для секции "Quotes:").
;  8192  диапазон не содержит разделителей (только для секции "Quotes:").
; 16384  захватывать только начало диапазона (только для секции "Quotes:").
; 32768  диапазон не содержит каких-либо символов (только для секции "Quotes:").


Font:
;=================================================================
; FontStyle             FontSize              FaceName
;=================================================================
${HighLight_FontStyle} ${HighLight_FontSize} ${HighLight_FaceName}


Colors:
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
; BasicTextColor             BasicBkColor              SelTextColor              SelBkColor              LineTextColor              LineBkColor              LineBorderColor              AltTextColor              AltBkColor              AltBorderColor              ColumnColor              MarkerColor              CaretColor              UrlColor              ActiveUrlColor              VisitUrlColor
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
${HighLight_BasicTextColor} ${HighLight_BasicBkColor} ${HighLight_SelTextColor} ${HighLight_SelBkColor} ${HighLight_LineTextColor} ${HighLight_LineBkColor} ${HighLight_LineBorderColor} ${HighLight_AltTextColor} ${HighLight_AltBkColor} ${HighLight_AltBorderColor} ${HighLight_ColumnColor} ${HighLight_MarkerColor} ${HighLight_CaretColor} ${HighLight_UrlColor} ${HighLight_ActiveUrlColor} ${HighLight_VisitUrlColor}


BkImage:
;==================================================
; BkImageFile              BkImageAlpha
;==================================================
${HighLight_BkImageFile}  ${HighLight_BkImageAlpha}


AutoMark:
;====================================================================================================================
; AutoMarkFlags             AutoMarkFontStyle              AutoMarkTextColor              AutoMarkBkColor
;====================================================================================================================
${HighLight_AutoMarkFlags} ${HighLight_AutoMarkFontStyle} ${HighLight_AutoMarkTextColor} ${HighLight_AutoMarkBkColor}


Quotes:
;======================================================================
; Flags  Font    Color   Color   Quote   Quote   Escape  Quote   Quote
;       style   text    bkgrnd  start   end     char    include exclude
;======================================================================
1	3	${COMM}	0	" ;"	""	""	""	""
1	3	${COMM}	0	"	;"	""	""	""	""
; 513=1+512
513	3	${COMM}	0	";"	""	""	""	""
; 5=1+4
5	3	${COMM}	0	"/*"	"*/"	""	""	""
; Variable dereferencing %varName%
; 8197=1+4+8192
8197	0	${VAR}	0	"%"	"%"	""	""	""
; Variable keyword (built-in) dereferencing %A_xxx%
; 8197=1+4+8192
; 8197	0	${VAR}	0	"%A_"	"%"	""	""	""


QuotesRE:
;=========================================================================================
; Flags  Pattern                        \BackRef=(FontStyle,ColorText,ColorBk) \BackRef=...
;=========================================================================================
; Available colors:
;	${STR} - strings.
;	${COMM} - comments.
;	${VAR} - target variables (writable).
;	${DEL1} - ()
;	${DEL2} - delimiters.
;	${TYPE} - type-related stuff.
;	${OP} - commands.
;	${TAG} - labels?
;!	${ATTR} - currently used for expressions.
;	${IF} - conditions.
;	${AREA} - #Directives.
;	${NUM} - numbers.
; Unavailable colors:
;	${ROVAR} - read only variables.
;	${KEY} - keys/buttons.
;	${EXP} - expressions.
;	${WIN} - WinTitle.
;	${MODE} - different modes.
;	${OBJ} - arrays/objects
; Data types:
;	variables					${VAR}
;	read-only variables 		${VAR}?
;	commands					${OP}
;	numbers						${NUM}
;	#directives					${AREA}
;	WinTitle					${ATTR}?
;	expressions					${ATTR}?
;	hotkeys, keys, buttons		${STR}?
;	paths						${STR}?
;	type-related stuff			${TYPE}
;	options						${TYPE}?
;	modes						${TYPE}?
;	labels						${TAG}?
;	conditions					${IF}
; (!) Forcing or dereferencing of variables doesn't work if the variable is inside of an argument.
; Text strings in quotes.
; 0	`"((?:[^"]*?(?:"")?)*?)"` `\1=(0,${STR},0)`
; Functions.
; 0	`(?:^|,|\)|\()?\s*([\w#@\$\.]+)(?=\()` `\1=(0,${DEL1},0)`
; ; Assign a value of "expression" type to a variable.
; 0	`(?:^|,|\()?\s*(?:(Global|Static)\s+)?([\w#@\$\.]+?)\s*((?:\.|:|*|/{1,2}|\||&|\^|>>|<<|=|!|~)=)\s*(\d+)((?<=\s);.*$)?` `\1=(0,${TYPE},0) \2=(0,${VAR},0) \3=(0,${OP},0) \4=(0,${NUM},0) \5=(3,${COMM},0)` ; For only numeric values.
; 0	`(?:^|,|\()?\s*(?:(Global|Static)\s+)?([\w#@\$\.]+?)\s*((?:\.|:|*|/{1,2}|\||&|\^|>>|<<|!|-|\+|~)=)\s*(?:([\w#@\$]+(?!\(|\s*(?:\.|:|\+|-)?=)))?((?<=\s);.*$)?` `\1=(0,${TYPE},0) \2=(0,${VAR},0) \3=(0,${OP},0) \4=(0,${ATTR},0) \5=(3,${COMM},0)`
; ; Hotstrings.
; 0	`^\s*(:)(.*)(:)(.*)(::)\s*(.*)\s*((?<=\s);.*)?$` `\1=(0,${OP},0) \2=(0,${TYPE},0) \3=(0,${OP},0) \4=(0,${STR},0) \5=(0,${OP},0) \6=(0,${STR},0) \7=(3,${COMM},0)`
; ; Basic math operators.
; 0	`(\+|-|\*|:|/|\?|\.|>|<|=|!|\||&|%|~)` `\1=(0,${OP},0)`
; ; Set variables types.
; 0	`(?:^|\)|\(|,)\s*(?:(Global|Static)\s+)([\w#@\$]+?)` `\1=(0,${TYPE},0) \2=(0,${VAR},0)`
; ; 
; TEST: Expressions
; 0	`\w++\(\s)` `\1=(0,${DEL1},#ff0000)`
; 0 args
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#(?:ErrorStdOut|Install(?:Keybd|Mouse)Hook|No(?:Env|TrayIcon)|Persistent|WinActivateForce))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Edit|EnvUpdate|KeyHistory|List(?:Hotkey|Var)s|Reload|SplashTextOff|WinMinimizeAll(?:Undo)?)\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(3,${COMM},0)"
; (n - necessary, u - unnecessary)
; 1u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#If)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${ATTR},0) \6=(3,${COMM},0)"	; \5=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#InputLevel)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"	; \5=${LEVEL}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#LTrim)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#SingleInstance)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#UseHook)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Break|Continue)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TAG},0) \6=(3,${COMM},0)"	; \5=${LOOPLABEL} = (${NUM} or ${TAG})
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Critical)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Exit(?:App)?)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileEncoding)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileRecycleEmpty)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ListLines)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(OnExit)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TAG},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Throw|Return)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(3,${COMM},0)"	; \5=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Set(?:Caps|Num|Scroll)LockState)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Suspend)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
; 2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#IfWin(?:Not)?(?:Active|Exist))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"	; \5=${WIN}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#Warn)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ClipWait)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Pause)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SoundBeep)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"
; 3u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Click)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"	; Not sure if only 3 args are possible. Not sure about the specified colors. Also, autocomplete rules for this are missing.
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileAppend)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(RunAs)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetKeyDelay)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetTimer)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TAG},0) \6=(0,${TYPE},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"	; Not sure about the specified colors.
; 4u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(IfWin(?:Not)?(?:Active|Exist))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Input)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SplashTextOn)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ToolTip)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"	; \6=\7=\8=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(TrayTip)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"	; \7=\8=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Win(?:Activate(?:Bottom)?|Hide|(?:Max|Min)imize|Restore|Show))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
; 5u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlFocus)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${ATTR},0) \7=(0,${STR},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileSetTime)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MouseGetPos)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${TYPE},0) \10=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Win(?:Close|Kill|Wait(?:(?:Not)?Active|Close)?))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${NUM},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
; 6u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlSe(?:tText|nd(?:Raw)?))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SplashImage)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
; 7u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MouseClick)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${TYPE},0) \11=(0,${TYPE},0) \12=(3,${COMM},0)"	; \7=\8=\9=${EXP}, 1st attr is tweakable.
; 8u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlClick)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${ATTR},0) \7=(0,${STR},0) \8=(0,${TYPE},0) \9=(0,${NUM},0) \10=(0,${TYPE},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"	; Not sure if options are tweakable.
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StatusBarWait)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(0,${NUM},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinGetPos)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"
; 9u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlGetPos)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${ATTR},0) \10=(0,${ATTR},0) \11=(0,${STR},0) \12=(0,${ATTR},0) \13=(0,${STR},0) \14=(3,${COMM},0)"
; 1n
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#ClipboardTimeout)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#CommentFlag)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#(?:Escape|Deref)Char|Delimiter|Include(?:Again)?)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#HotkeyInterval|#HotkeyModifierTimeout|#IfTimeout|#KeyHistory|#MaxHotkeysPerInterval|#MaxMem|#MaxThreads)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#Hotstring)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#MaxThreadsBuffer)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#MaxThreadsPerHotkey)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${ATTR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(#MenuMaskKey)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${AREA},0) \5=(0,${STR},0) \6=(3,${COMM},0)"	; Stackable. \5=${KEY}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(AutoTrim|DetectHidden(?:Text|Windows)|SetStoreCapslockMode)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(BlockInput)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+((?:FileCreate|SetWorking)Dir)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"	; \5=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(File(?:Delete|Recycle))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"	; \5=${FILEPATTERN}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Go(?:Sub|To))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TAG},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If(?:Not)?Exist)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${IF},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(IfMsgBox)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${IF},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(OutputDebug)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Send(?:Raw|Input|Play|Event)?)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"	; \5=${KEY}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SendLevel|Set(?:DefaultMouseSpeed|(?:Control|Win)Delay))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"	; \5=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SendMode)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetBatchLines|Shutdown|Sleep)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"	; \5=${TIME}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetRegView)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetTitleMatchMode)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringCaseSense)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinGetActiveTitle)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(3,${COMM},0)"
; 1n1u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(CoordMode)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileGet(?:Attrib|Version))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"	; \6=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileRemoveDir|SoundPlay)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"	; \5=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Group(?:De)?Activate)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(GroupClose)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(KeyWait)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"	; \5=${KEY}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetMouseDelay)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"	; \5=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Sort)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SoundGetWaveVolume)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SoundSetWaveVolume)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"	; \5=${EXP}
; 1n2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Drive)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${ATTR},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Env(?:Add|Sub))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileGetSize)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileGetTime)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FormatTime)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Thread)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \7=(0,${NUM},0) \9=(0,${NUM},0) \10=(3,${COMM},0)"
; 1n3u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileSelectFolder)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileSetAttrib)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Gui)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(0,${TYPE},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(GuiControlGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${ATTR},0) \8=(0,${TYPE},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Run(?:Wait)?)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(0,${VAR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SoundGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SoundSet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"
; 1n4u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlGetFocus|WinGet(?:Class|Text|Title))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${ATTR},0) \7=(0,${STR},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileSelectFile)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"	; \7=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Progress)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
; 1n5u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlGetText)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${ATTR},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(GroupAdd)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${ATTR},0) \7=(0,${STR},0) \8=(0,${TAG},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"	; \5=${GROUP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SplitPath)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${VAR},0) \10=(0,${VAR},0) \11=(3,${COMM},0)" ; ${ROVAR}s vs ${VAR}s
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StatusBarGetText)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
; 1n6u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Control)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(0,${ATTR},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(0,${ATTR},0) \11=(0,${STR},0) \12=(3,${COMM},0)"
; 1n7u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileGetShortcut)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${VAR},0) \10=(0,${VAR},0) \11=(0,${VAR},0) \12=(0,${VAR},0) \13=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(PostMessage)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${ATTR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"	; \5=\6=\7=${EXP}
; 1n8u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SendMessage)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${ATTR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(0,${NUM},0) \14=(3,${COMM},0)"	; \5=\6=\7=${EXP}
; 2n
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(DriveSpaceFree|EnvSet|SetEnv)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"	; \6=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(EnvDiv|EnvMult)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"	; \6=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(EnvGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileRead)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"	; \6=${PATH}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If(?:(?:Greater|Less)(?:OrEqual)?|(?:Not)?(?:Equal|InString)))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${IF},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SetFormat)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringLen)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(UrlDownloadToFile)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(3,${COMM},0)"
; 2n1u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(DriveGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(File(?:(?:Copy|Move)(?:Dir)?|Install))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"	; \7=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(GetKeyState)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(IniDelete)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Process)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(String(?:Low|Upp)er)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(SysGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"
; 2n2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MouseMove)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${TYPE},0) \9=(3,${COMM},0)"	; \5=\6=\8=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringSplit)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
; 2n3u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(IniRead)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
; 2n6u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlGet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(0,${ATTR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"
; 2n7u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileCreateShortcut)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${STR},0) \10=(0,${STR},0) \11=(0,${STR},0) \12=(0,${NUM},0) \13=(0,${TYPE},0) \14=(3,${COMM},0)"
; 3n
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(FileReadLine)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"	; \7=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(String(?:Trim)?(?:Lef|Righ)t)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"	; \7=${EXP}
; 3n1u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(IniWrite)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(PixelGetColor)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${TYPE},0) \9=(3,${COMM},0)"	; \6=\7=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(RegRead)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Transform)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${TYPE},0) \7=(0,${STR},0) \8=(0,${TYPE},0) \9=(3,${COMM},0)"	; Customizable.
; 3n2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringGetPos)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${STR},0) \8=(0,${TYPE},0) \9=(0,${NUM},0) \10=(3,${COMM},0)"	; \9=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringMid)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${TYPE},0) \10=(3,${COMM},0)"	; \7=\8=${EXP}
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(StringReplace)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${TYPE},0) \10=(3,${COMM},0)"
; 3n8u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinMenuSelectItem)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(0,${TYPE},0) \9=(0,${TYPE},0) \10=(0,${TYPE},0) \11=(0,${TYPE},0) \12=(0,${TYPE},0) \13=(0,${TYPE},0) \14=(0,${ATTR},0) \15=(0,${STR},0) \16=(3,${COMM},0)"
; 5n
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinGetActiveStats)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${VAR},0) \8=(0,${VAR},0) \9=(0,${VAR},0) \10=(3,${COMM},0)"
; 5n2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MouseClickDrag)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${NUM},0) \11=(0,${TYPE},0) \12=(3,${COMM},0)"	; \6=\7=\8=\9=\10=${EXP}
; 5n4u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ControlMove)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${ATTR},0) \11=(0,${STR},0) \12=(0,${ATTR},0) \13=(0,${STR},0) \14=(3,${COMM},0)"	; \6=\7=\8=\9=${EXP}
; 7n
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(ImageSearch)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${NUM},0) \11=(0,${STR},0) \12=(3,${COMM},0)"	; \7=\8=\9=\10=${EXP}
; 7n2u
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(PixelSearch)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${NUM},0) \11=(0,${TYPE},0) \12=(0,${NUM},0) \13=(0,${TYPE},0) \14=(3,${COMM},0)"	; \7=\8=\9=\10=\11=\12=${EXP}
;
;
; Multiple usage cases: (b - blank, k - some predefined keyword(s))
; 3 "Hotkey"
; 1n2u			Hotkey, KeyName [, Label|Type, Options]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Hotkey)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
; 1k2u			Hotkey, IfWin(Not)?(Active|Exist) [, WinTitle, WinText]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Hotkey)(?:\s*+,\s*+|\s++)(IfWin(?:Not)?(?:Active|Exist))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${IF},0) \6=(0,${ATTR},0) \7=(0,${STR},0) \8=(3,${COMM},0)"
; ; 1k1n			Hotkey, If, Expression
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Hotkey)(?:\s*+,\s*+|\s++)(If)(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${IF},0) \6=(0,${ATTR},0) \7=(3,${COMM},0)"
; 5 "Loop"
; 1k1n2u		Loop, Parse, InputVar [, Delimiters, OmitChars] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Loop)(?:\s*+,\s*+|\s++)(Parse)(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${VAR},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(3,${COMM},0)"
; 1k1n1u		Loop, Read, InputFile [, OutputFile] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Loop)(?:\s*+,\s*+|\s++)(Read)(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
; 1n3u			Loop, RootKey [, Key, IncludeSubkeys?, Recurse?] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Loop)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \7=(0,${STR},0) \9=(0,${TYPE},0) \11=(0,${TYPE},0) \12=(3,${COMM},0)"
; 1u			Loop [, Count] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Loop)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \6=(0,${ATTR},0) \7=(3,${COMM},0)"
; 1n2u			Loop, FilePattern [, IncludeFolders?, Recurse?] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Loop)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \6=(0,${STR},0) \8=(0,${TYPE},0) \10=(0,${TYPE},0) \11=(3,${COMM},0)"
; 2 "Menu"
; 2n3u			Menu, MenuName, Cmd [, P3, P4, P5]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Menu)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(0,${TYPE},0) \7=(0,${TYPE},0) \8=(0,${TYPE},0) \9=(0,${TYPE},0) \10=(3,${COMM},0)"
; 2 "Msgbox"
; 1u			MsgBox [, Text]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MsgBox)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
; 4u			MsgBox [, Options, Title, Text, Timeout]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(MsgBox)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${NUM},0) \9=(3,${COMM},0)"
; 2 "Random"
; 1n2u			Random, OutputVar [, Min, Max]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Random)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${NUM},0) \7=(0,${NUM},0) \8=(3,${COMM},0)"
; 1b1n			Random,, NewSeed
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Random)(?:\s*+,\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(3,${COMM},0)"
; 2 "WinMove"
; 2u			WinMove, [X, Y]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinMove)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${NUM},0) \6=(0,${NUM},0) \7=(3,${COMM},0)"
; 8u			WinMove [, WinTitle, WinText, X, Y, Width, Height, ExcludeTitle, ExcludeText]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinMove)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${NUM},0) \8=(0,${NUM},0) \9=(0,${NUM},0) \10=(0,${NUM},0) \11=(0,${ATTR},0) \12=(0,${STR},0) \13=(3,${COMM},0)"
; 4 "WinSet"
; 1n5u			WinSet, Region [, Options, WinTitle, WinText,  ExcludeTitle, ExcludeText]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinSet)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(0,${ATTR},0) \8=(0,${STR},0) \9=(0,${ATTR},0) \10=(0,${STR},0) \11=(3,${COMM},0)"
; 2 "WinSetTitle"
; 1n			WinSetTitle, NewTitle
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinSetTitle)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${OP},0) \5=(0,${STR},0) \6=(3,${COMM},0)"
; ; 3n2u			WinSetTitle, WinTitle, WinText, NewTitle [, ExcludeTitle, ExcludeText]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(WinSetTitle)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${ATTR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${ATTR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
;
;
; Special cases:
; 1u			Catch [, OutputVar] [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(Catch)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(3,${COMM},0)"
; 0 args		Else [{]
0	"^\s*+(?:\}\s*+)*+(Else)\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(0,${IF},0) \2=(3,${COMM},0)"
; nun			For Key [, Val] In Expression
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(For)(?:(?:\s*+,\s*+|\s++)([^;,\s]++))(?:\s*+,\s*+([^;,\s])++)?+\s++(In)(?:\s++((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${VAR},0) \7=(0,${IF},0) \8=(0,${ATTR},0) \9=(3,${COMM},0)"
; 0 args		Finally [{]
0	"^\s*+(?:\}\s*+)*+(Finally)\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(0,${OP},0) \2=(3,${COMM},0)"
; 3u		GuiControl	[, Sub-command, ControlID, Param3]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(GuiControl)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${ATTR},0) \7=(0,${TYPE},0) \8=(3,${COMM},0)"
; 3n			If Var (not)? between LowerBound and UpperBound [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If)(?:\s++([^;,\s]++))\s++((?:not\s++)?between)(?:\s++((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s++(and)(?:\s++((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0) \5=(2,${VAR},0) \6=(2,${AREA},0) \7=(2,${NUM},0) \8=(2,${AREA},0) \9=(2,${NUM},0) \10=(3,${COMM},0)"
; 2n			If Var (not)? in|contains MatchList [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If)(?:\s++([^;,\s]++))\s++((?:not\s++)?(?:in|contains))(?:\s++((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0) \5=(2,${VAR},0) \6=(2,${AREA},0) \7=(2,${STR},0) \8=(3,${COMM},0)"
; ; 2n			If Var is (not)? Type [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If)(?:\s++([^;,\s]++))\s++(is(?:\s++not)?)(?:\s++((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0) \5=(2,${VAR},0) \6=(2,${AREA},0) \7=(2,${TYPE},0) \8=(3,${COMM},0)"
; 1n			If, Expression [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0) \5=(0,${ATTR},0) \6=(3,${COMM},0)"
; 0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(If)(?:\s*,\s*|\s+)" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(2,${IF},0)"
; 1n7u1b2u		InputBox, OutputVar [, Title, Prompt, HIDE, Width, Height, X, Y,, Timeout, Default]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(InputBox)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${VAR},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(0,${TYPE},0) \9=(0,${NUM},0) \10=(0,${NUM},0) \11=(0,${NUM},0) \12=(0,${NUM},0) \13=(0,${NUM},0) \14=(0,${STR},0) \15=(3,${COMM},0)"	; \9=\10=\11=${EXP}
; 2n1u		RegDelete, RootKey, SubKey [, ValueName]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(RegDelete)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${STR},0) \7=(0,${STR},0) \8=(3,${COMM},0)"
; 3n2u		RegWrite, ValueType, RootKey, SubKey [, ValueName, Value]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(RegWrite)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+(?:\s*+,\s*+((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${OP},0) \5=(0,${TYPE},0) \6=(0,${TYPE},0) \7=(0,${STR},0) \8=(0,${STR},0) \9=(0,${STR},0) \10=(3,${COMM},0)"
; 0 args		Try [{]
0	"^\s*(?:(?:\}\s*)*?(Else)(?:\s*,\s*|\s+|\s*\{\s*)|(.+(?=::))::)?\s*(Try)\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(0,${OP},0) \4=(3,${COMM},0)"
; 1u			Until, Expression
0	"^\s*(?:\}\s*)*?(Until)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))*+))?+\s*+((?<=\s);.*)?+$" "\1=(0,${IF},0) \2=(0,${ATTR},0) \3=(3,${COMM},0)"
; 1n			While, Expression [{]
0	"^\s*+(?:\}\s*+)*+(?:(Else)(?:\s*+[,{]\s*+|\s++)|(.+(?=::))::)?+(?:(Try)(?:\s*+[,{]\s*+|\s++))?+\s*+(While)(?:(?:\s*+,\s*+|\s++)((?:[^;,\s]|(?<=`),|(?<!\s);|\s++(?![,;\s]))++))\s*+\{?\s*+((?<=\s);.*)?+$" "\1=(4,${IF},0) \2=(4,${STR},0) \3=(2,${OP},0) \4=(0,${IF},0) \5=(0,${ATTR},0) \6=(3,${COMM},0)"
;
;
;
; Declaring a global or static variable.
0	`(?:^|,|\(|\))\s*+(Global|Static)\s++([\w#@\$]++(?=\s*,|\s*$|\s++;))` `\1=(0,${TYPE},0) \2=(0,${VAR},0)`
; ; Hotkeys.
; 0	`^\s*(.*)\s*::` `\1=(4,${STR},0)`
; ; Labels.
; 0	"^\s*([^\s,`]+?):\s*((?<=\s);.*)?$" `\1=(0,${TAG},0) \2=(3,${COMM},0)`
; ; Expressions at line start.
; 0	`\b(\d+)\b` `\1=(0,${NUM},0)`
; 0	`\b([\w#@\$]+)\b` `\1=(0,${ATTR},0)`
; Should get gone


Delimiters:
;======================================
; Flags  Font    Color   Color   Char(s)
;       style   text    bkgrnd
;======================================
1	0	0		0	" "
1	0	0		0	"	"
1	0	0	0	(
1	0	0	0	)
1	0	0	0	{
1	0	0	0	}
1	0	0	0	:
1	0	0	0	=
1	0	0	0	,
1	0	0	0	*
1	0	0	0	$
1	0	0	0	~
1	0	0	0	-
1	0	0	0	+
1	0	0	0	>
1	0	0	0	<
1	0	0	0	[
1	0	0	0	]
1	0	0	0	"`,"
1	0	0	0	"`%"
1	0	0	0	"``"
1	0	0	0	"`;"
1	0	0	0	"`n"
1	0	0	0	"`r"
1	0	0	0	"`b"
1	0	0	0	"`t"
1	0	0	0	"`v"
1	0	0	0	"`a"
1	0	0	0	"`f"


Words:
;===================================
; Flags  Font    Color   Color   Word
;       style   text    bkgrnd
;===================================
; Numerical
; 3=1+2
; 3	0	${NUM}	0	"0123456789"
; Directives
0	0	0	0	#ClipboardTimeout
0	0	0	0	#CommentFlag
0	0	0	0	#DerefChar
0	0	0	0	#Delimiter
; 0	0	0	0	#ErrorStdOut
0	0	0	0	#EscapeChar
0	0	0	0	#HotkeyInterval
0	0	0	0	#HotkeyModifierTimeout
0	0	0	0	#Hotstring
0	0	0	0	#If
0	0	0	0	#IfTimeout
0	0	0	0	#IfWinActive
0	0	0	0	#IfWinExist
0	0	0	0	#IfWinNotActive
0	0	0	0	#IfWinNotExist
0	0	0	0	#Include
0	0	0	0	#IncludeAgain
0	0	0	0	#InputLevel
0	0	0	0	#InstallKeybdHook
0	0	0	0	#InstallMouseHook
0	0	0	0	#KeyHistory
0	0	0	0	#LTrim
0	0	0	0	#MaxHotkeysPerInterval
0	0	0	0	#MaxMem
0	0	0	0	#MaxThreads
0	0	0	0	#MaxThreadsBuffer
0	0	0	0	#MaxThreadsPerHotkey
0	0	0	0	#MenuMaskKey
0	0	0	0	#NoEnv
0	0	0	0	#NoTrayIcon
0	0	0	0	#Persistent
0	0	0	0	#SingleInstance
0	0	0	0	#UseHook
0	0	0	0	#Warn
0	0	0	0	#WinActivateForce
; Built-in Variables
0	0	0	0	A_AhkPath
0	0	0	0	A_AhkVersion
0	0	0	0	A_AppData
0	0	0	0	A_AppDataCommon
0	0	0	0	A_AutoTrim
0	0	0	0	A_BatchLines
0	0	0	0	A_CaretX
0	0	0	0	A_CaretY
0	0	0	0	A_ComputerName
0	0	0	0	A_ControlDelay
0	0	0	0	A_Cursor
0	0	0	0	A_DD
0	0	0	0	A_DDD
0	0	0	0	A_DDDD
0	0	0	0	A_DefaultMouseSpeed
0	0	0	0	A_Desktop
0	0	0	0	A_DesktopCommon
0	0	0	0	A_DetectHiddenText
0	0	0	0	A_DetectHiddenWindows
0	0	0	0	A_EndChar
0	0	0	0	A_EventInfo
0	0	0	0	A_ExitReason
0	0	0	0	A_FileEncoding
0	0	0	0	A_FormatFloat
0	0	0	0	A_FormatInteger
0	0	0	0	A_Gui
0	0	0	0	A_GuiControl
0	0	0	0	A_GuiControlEvent
0	0	0	0	A_GuiEvent
0	0	0	0	A_GuiHeight
0	0	0	0	A_GuiWidth
0	0	0	0	A_GuiX
0	0	0	0	A_GuiY
0	0	0	0	A_Hour
0	0	0	0	A_IconFile
0	0	0	0	A_IconHidden
0	0	0	0	A_IconNumber
0	0	0	0	A_IconTip
0	0	0	0	A_Index
0	0	0	0	A_IPAddress1
0	0	0	0	A_IPAddress2
0	0	0	0	A_IPAddress3
0	0	0	0	A_IPAddress4
0	0	0	0	A_Is64bitOS
0	0	0	0	A_IsAdmin
0	0	0	0	A_IsCompiled
0	0	0	0	A_IsCritical
0	0	0	0	A_IsPaused
0	0	0	0	A_IsSuspended
0	0	0	0	A_IsUnicode
0	0	0	0	A_KeyDelay
0	0	0	0	A_Language
0	0	0	0	A_LastError
0	0	0	0	A_LineFile
0	0	0	0	A_LineNumber
0	0	0	0	A_LoopField
0	0	0	0	A_LoopFileAttrib
0	0	0	0	A_LoopFileDir
0	0	0	0	A_LoopFileExt
0	0	0	0	A_LoopFileFullPath
0	0	0	0	A_LoopFileLongPath
0	0	0	0	A_LoopFileName
0	0	0	0	A_LoopFileShortName
0	0	0	0	A_LoopFileShortPath
0	0	0	0	A_LoopFileSize
0	0	0	0	A_LoopFileSizeKB
0	0	0	0	A_LoopFileSizeMB
0	0	0	0	A_LoopFileTimeAccessed
0	0	0	0	A_LoopFileTimeCreated
0	0	0	0	A_LoopFileTimeModified
0	0	0	0	A_LoopReadLine
0	0	0	0	A_LoopRegKey
0	0	0	0	A_LoopRegName
0	0	0	0	A_LoopRegSubkey
0	0	0	0	A_LoopRegTimeModified
0	0	0	0	A_LoopRegType
0	0	0	0	A_MDAY
0	0	0	0	A_Min
0	0	0	0	A_MM
0	0	0	0	A_MMM
0	0	0	0	A_MMMM
0	0	0	0	A_Mon
0	0	0	0	A_MouseDelay
0	0	0	0	A_MSec
0	0	0	0	A_MyDocuments
0	0	0	0	A_Now
0	0	0	0	A_NowUTC
0	0	0	0	A_NumBatchLines
0	0	0	0	A_OSType
0	0	0	0	A_OSVersion
0	0	0	0	A_PriorKey
0	0	0	0	A_PriorHotkey
0	0	0	0	A_ProgramFiles
0	0	0	0	A_Programs
0	0	0	0	A_ProgramsCommon
0	0	0	0	A_PtrSize
0	0	0	0	A_RegView
0	0	0	0	A_ScreenDPI
0	0	0	0	A_ScreenHeight
0	0	0	0	A_ScreenWidth
0	0	0	0	A_ScriptDir
0	0	0	0	A_ScriptFullPath
0	0	0	0	A_ScriptHwnd
0	0	0	0	A_ScriptName
0	0	0	0	A_Sec
0	0	0	0	A_Space
0	0	0	0	A_StartMenu
0	0	0	0	A_StartMenuCommon
0	0	0	0	A_Startup
0	0	0	0	A_StartupCommon
0	0	0	0	A_StringCaseSense
0	0	0	0	A_Tab
0	0	0	0	A_Temp
0	0	0	0	A_ThisFunc
0	0	0	0	A_ThisHotkey
0	0	0	0	A_ThisLabel
0	0	0	0	A_ThisMenu
0	0	0	0	A_ThisMenuItem
0	0	0	0	A_ThisMenuItemPos
0	0	0	0	A_TickCount
0	0	0	0	A_TimeIdle
0	0	0	0	A_TimeIdlePhysical
0	0	0	0	A_TimeSincePriorHotkey
0	0	0	0	A_TimeSinceThisHotkey
0	0	0	0	A_TitleMatchMode
0	0	0	0	A_TitleMatchModeSpeed
0	0	0	0	A_UserName
0	0	0	0	A_WDay
0	0	0	0	A_WinDelay
0	0	0	0	A_WinDir
0	0	0	0	A_WorkingDir
0	0	0	0	A_YDay
0	0	0	0	A_YEAR
0	0	0	0	A_YWeek
0	0	0	0	A_YYYY
0	0	0	0	Clipboard
0	0	0	0	ClipboardAll
0	0	0	0	ComSpec
0	0	0	0	ErrorLevel
0	0	0	0	ProgramFiles
0	0	0	0	true
0	0	0	0	false
; Hotkey modifiers
0	0	0	0	^
0	0	0	0	+
0	0	0	0	!
0	0	0	0	#
0	0	0	0	~
0	0	0	0	$
0	0	0	0	`
; Keys and buttons
0	0	0	0	Alt
0	0	0	0	AltDown
0	0	0	0	AltUp
0	0	0	0	AppsKey
0	0	0	0	Backspace
0	0	0	0	Blind
0	0	0	0	Browser_Back
0	0	0	0	Browser_Favorites
0	0	0	0	Browser_Forward
0	0	0	0	Browser_Home
0	0	0	0	Browser_Refresh
0	0	0	0	Browser_Search
0	0	0	0	Browser_Stop
0	0	0	0	BS
0	0	0	0	CapsLock
0	0	0	0	Click
0	0	0	0	ControlDown
0	0	0	0	ControlUp
0	0	0	0	Ctrl
0	0	0	0	CtrlBreak
0	0	0	0	CtrlDown
0	0	0	0	CtrlUp
0	0	0	0	Del
0	0	0	0	Delete
0	0	0	0	Down
0	0	0	0	End
0	0	0	0	Enter
0	0	0	0	Esc
0	0	0	0	Escape
0	0	0	0	F1
0	0	0	0	F10
0	0	0	0	F11
0	0	0	0	F12
0	0	0	0	F13
0	0	0	0	F14
0	0	0	0	F15
0	0	0	0	F16
0	0	0	0	F17
0	0	0	0	F18
0	0	0	0	F19
0	0	0	0	F2
0	0	0	0	F20
0	0	0	0	F21
0	0	0	0	F22
0	0	0	0	F23
0	0	0	0	F24
0	0	0	0	F3
0	0	0	0	F4
0	0	0	0	F5
0	0	0	0	F6
0	0	0	0	F7
0	0	0	0	F8
0	0	0	0	F9
0	0	0	0	Home
0	0	0	0	Ins
0	0	0	0	Insert
0	0	0	0	Joy1
0	0	0	0	Joy10
0	0	0	0	Joy11
0	0	0	0	Joy12
0	0	0	0	Joy13
0	0	0	0	Joy14
0	0	0	0	Joy15
0	0	0	0	Joy16
0	0	0	0	Joy17
0	0	0	0	Joy18
0	0	0	0	Joy19
0	0	0	0	Joy2
0	0	0	0	Joy20
0	0	0	0	Joy21
0	0	0	0	Joy22
0	0	0	0	Joy23
0	0	0	0	Joy24
0	0	0	0	Joy25
0	0	0	0	Joy26
0	0	0	0	Joy27
0	0	0	0	Joy28
0	0	0	0	Joy29
0	0	0	0	Joy3
0	0	0	0	Joy30
0	0	0	0	Joy31
0	0	0	0	Joy32
0	0	0	0	Joy4
0	0	0	0	Joy5
0	0	0	0	Joy6
0	0	0	0	Joy7
0	0	0	0	Joy8
0	0	0	0	Joy9
0	0	0	0	JoyAxes
0	0	0	0	JoyButtons
0	0	0	0	JoyInfo
0	0	0	0	JoyName
0	0	0	0	JoyPOV
0	0	0	0	JoyR
0	0	0	0	JoyU
0	0	0	0	JoyV
0	0	0	0	JoyX
0	0	0	0	JoyY
0	0	0	0	JoyZ
0	0	0	0	LAlt
0	0	0	0	Launch_App1
0	0	0	0	Launch_App2
0	0	0	0	Launch_Mail
0	0	0	0	Launch_Media
0	0	0	0	LButton
0	0	0	0	LControl
0	0	0	0	LCtrl
0	0	0	0	Left
0	0	0	0	LShift
0	0	0	0	LWin
0	0	0	0	LWinDown
0	0	0	0	LWinUp
0	0	0	0	MButton
0	0	0	0	Media_Next
0	0	0	0	Media_Play_Pause
0	0	0	0	Media_Prev
0	0	0	0	Media_Stop
0	0	0	0	NumLock
0	0	0	0	Numpad0
0	0	0	0	Numpad1
0	0	0	0	Numpad2
0	0	0	0	Numpad3
0	0	0	0	Numpad4
0	0	0	0	Numpad5
0	0	0	0	Numpad6
0	0	0	0	Numpad7
0	0	0	0	Numpad8
0	0	0	0	Numpad9
0	0	0	0	NumpadAdd
0	0	0	0	NumpadClear
0	0	0	0	NumpadDel
0	0	0	0	NumpadDiv
0	0	0	0	NumpadDot
0	0	0	0	NumpadDown
0	0	0	0	NumpadEnd
0	0	0	0	NumpadEnter
0	0	0	0	NumpadHome
0	0	0	0	NumpadIns
0	0	0	0	NumpadLeft
0	0	0	0	NumpadMult
0	0	0	0	NumpadPgdn
0	0	0	0	NumpadPgup
0	0	0	0	NumpadRight
0	0	0	0	NumpadSub
0	0	0	0	NumpadUp
0	0	0	0	Pause
0	0	0	0	PgDn
0	0	0	0	PgUp
0	0	0	0	PrintScreen
0	0	0	0	RAlt
0	0	0	0	Raw
0	0	0	0	RButton
0	0	0	0	RControl
0	0	0	0	RCtrl
0	0	0	0	Right
0	0	0	0	RShift
0	0	0	0	RWin
0	0	0	0	RWinDown
0	0	0	0	RWinUp
0	0	0	0	ScrollLock
0	0	0	0	Shift
0	0	0	0	ShiftDown
0	0	0	0	ShiftUp
0	0	0	0	Space
0	0	0	0	Tab
0	0	0	0	Up
0	0	0	0	Volume_Down
0	0	0	0	Volume_Mute
0	0	0	0	Volume_Up
0	0	0	0	WheelDown
0	0	0	0	WheelLeft
0	0	0	0	WheelRight
0	0	0	0	WheelUp
0	0	0	0	XButton1
0	0	0	0	XButton2
; Conditional
0	0	0	0	If
0	0	0	0	IfEqual
0	0	0	0	IfNotEqual
0	0	0	0	IfExist
0	0	0	0	IfNotExist
0	0	0	0	IfGreater
0	0	0	0	IfGreaterOrEqual
0	0	0	0	IfLess
0	0	0	0	IfLessOrEqual
0	0	0	0	IfMsgBox
0	0	0	0	IfInString
0	0	0	0	IfNotInString
0	0	0	0	IfWinActive
0	0	0	0	IfWinNotActive
0	0	0	0	IfWinExist
0	0	0	0	IfWinNotExist
0	0	0	0	Else
0	0	0	0	Until
0	0	0	0	While
; Environment Management
0	0	0	0	ClipWait
0	0	0	0	EnvGet
0	0	0	0	EnvSet
0	0	0	0	EnvUpdate
; File, Directory, and Disk Management
0	0	0	0	Drive
0	0	0	0	DriveGet
0	0	0	0	DriveSpaceFree
0	0	0	0	FileAppend
0	0	0	0	FileCopy
0	0	0	0	FileCopyDir
0	0	0	0	FileCreateDir
0	0	0	0	FileCreateShortcut
0	0	0	0	FileDelete
0	0	0	0	FileEncoding
0	0	0	0	FileGetAttrib
0	0	0	0	FileGetShortcut
0	0	0	0	FileGetSize
0	0	0	0	FileGetTime
0	0	0	0	FileGetVersion
0	0	0	0	FileInstall
0	0	0	0	FileMove
0	0	0	0	FileMoveDir
0	0	0	0	FileReadLine
0	0	0	0	FileRead
0	0	0	0	FileRecycle
0	0	0	0	FileRecycleEmpty
0	0	0	0	FileRemoveDir
0	0	0	0	FileSelectFile
0	0	0	0	FileSelectFolder
0	0	0	0	FileSetAttrib
0	0	0	0	FileSetTime
0	0	0	0	IniDelete
0	0	0	0	IniRead
0	0	0	0	IniWrite
0	0	0	0	SetWorkingDir
0	0	0	0	SplitPath
; Flow of control
0	0	0	0	Break
0	0	0	0	Catch
0	0	0	0	Continue
0	0	0	0	Critical
0	0	0	0	Exit
0	0	0	0	ExitApp
0	0	0	0	Finally
0	0	0	0	Gosub
0	0	0	0	Goto
0	0	0	0	OnExit
; 0	0	0	0	Pause ; That causes bug, since it's used twice.
0	0	0	0	Reload
0	0	0	0	Return
0	0	0	0	SetBatchLines
0	0	0	0	SetTimer
0	0	0	0	Sleep
0	0	0	0	Suspend
0	0	0	0	Thread
0	0	0	0	Throw
0	0	0	0	Try
; Scopes
0	0	0	0	ByRef
0	0	0	0	Global
0	0	0	0	Local
0	0	0	0	Static
; Loops
0	0	0	0	Loop
0	0	0	0	For
; Array Functions
0	0	0	0	.MaxIndex
0	0	0	0	.MinIndex
0	0	0	0	.Clone
0	0	0	0	._NewEnum
; File Object Functions
0	0	0	0	.__Handle
0	0	0	0	.AtEOF
0	0	0	0	.Close
0	0	0	0	.Encoding
0	0	0	0	.Length
0	0	0	0	.Pos
0	0	0	0	.Position
0	0	0	0	.RawRead
0	0	0	0	.RawWrite
0	0	0	0	.Read
0	0	0	0	.ReadChar
0	0	0	0	.ReadDouble
0	0	0	0	.ReadFloat
0	0	0	0	.ReadInt
0	0	0	0	.ReadInt64
0	0	0	0	.ReadLine
0	0	0	0	.ReadShort
0	0	0	0	.ReadUChar
0	0	0	0	.ReadUInt
0	0	0	0	.ReadUShort
0	0	0	0	.Seek
0	0	0	0	.Tell
0	0	0	0	.Write
0	0	0	0	.WriteChar
0	0	0	0	.WriteDouble
0	0	0	0	.WriteFloat
0	0	0	0	.WriteInt
0	0	0	0	.WriteInt64
0	0	0	0	.WriteLine
0	0	0	0	.WriteShort
0	0	0	0	.WriteUChar
0	0	0	0	.WriteUInt
0	0	0	0	.WriteUShort
; Functions
0	0	0	0	Abs
0	0	0	0	ACos
0	0	0	0	Array
0	0	0	0	Asc
0	0	0	0	ASin
0	0	0	0	ATan
0	0	0	0	Ceil
0	0	0	0	Chr
0	0	0	0	ComObjActive
0	0	0	0	ComObjArray
0	0	0	0	ComObjConnect
0	0	0	0	ComObjCreate
0	0	0	0	ComObjEnwrap
0	0	0	0	ComObjError
0	0	0	0	ComObjFlags
0	0	0	0	ComObjGet
0	0	0	0	ComObjMissing
0	0	0	0	ComObjParameter
0	0	0	0	ComObjQuery
0	0	0	0	ComObjType
0	0	0	0	ComObjUnwrap
0	0	0	0	ComObjValue
0	0	0	0	Cos
0	0	0	0	DllCall
0	0	0	0	Exp
0	0	0	0	FileExist
0	0	0	0	FileOpen
0	0	0	0	Floor
0	0	0	0	GetKeyName
0	0	0	0	GetKeySC
0	0	0	0	GetKeyState
0	0	0	0	GetKeyVK
0	0	0	0	IL_Add
0	0	0	0	IL_Create
0	0	0	0	IL_Destroy
0	0	0	0	InStr
0	0	0	0	IsByRef
0	0	0	0	IsFunc
0	0	0	0	IsLabel
0	0	0	0	IsObj
0	0	0	0	IsObject
0	0	0	0	Ln
0	0	0	0	Log
0	0	0	0	LV_Add
0	0	0	0	LV_Delete
0	0	0	0	LV_DeleteCol
0	0	0	0	LV_GetCount
0	0	0	0	LV_GetNext
0	0	0	0	LV_GetText
0	0	0	0	LV_Insert
0	0	0	0	LV_InsertCol
0	0	0	0	LV_Modify
0	0	0	0	LV_ModifyCol
0	0	0	0	LV_SetImageList
0	0	0	0	Mod
0	0	0	0	NumGet
0	0	0	0	NumPut
0	0	0	0	ObjAddRef
0	0	0	0	ObjClone
0	0	0	0	Object
0	0	0	0	ObjGetAddress
0	0	0	0	ObjGetCapacity
0	0	0	0	ObjHasKey
0	0	0	0	ObjInsert
0	0	0	0	ObjMaxIndex
0	0	0	0	ObjMinIndex
0	0	0	0	ObjNewEnum
0	0	0	0	ObjRelease
0	0	0	0	ObjRemove
0	0	0	0	ObjSetCapacity
0	0	0	0	OnMessage
0	0	0	0	RegExMatch
0	0	0	0	RegExReplace
0	0	0	0	RegisterCallback
0	0	0	0	Round
0	0	0	0	SB_SetIcon
0	0	0	0	SB_SetParts
0	0	0	0	SB_SetText
0	0	0	0	Sin
0	0	0	0	Sqrt
0	0	0	0	StrGet
0	0	0	0	StrLen
0	0	0	0	StrPut
0	0	0	0	SubStr
0	0	0	0	Tan
0	0	0	0	Trim
0	0	0	0	TV_Add
0	0	0	0	TV_Delete
0	0	0	0	TV_Get
0	0	0	0	TV_GetChild
0	0	0	0	TV_GetCount
0	0	0	0	TV_GetNext
0	0	0	0	TV_GetParent
0	0	0	0	TV_GetPrev
0	0	0	0	TV_GetSelection
0	0	0	0	TV_GetText
0	0	0	0	TV_Modify
0	0	0	0	TV_SetImageList
0	0	0	0	VarSetCapacity
0	0	0	0	WinActive
0	0	0	0	WinExist
; GUI, MsgBox, InputBox & Other Dialogs
0	0	0	0	Gui
0	0	0	0	GuiControl
0	0	0	0	GuiControlGet
0	0	0	0	InputBox
0	0	0	0	Menu
0	0	0	0	MsgBox
0	0	0	0	SplashImage
0	0	0	0	Progress
0	0	0	0	SplashTextOff
0	0	0	0	SplashTextOn
0	0	0	0	ToolTip
0	0	0	0	TrayTip
; Mouse and Keyboard
0	0	0	0	Hotkey
0	0	0	0	ListHotkeys
0	0	0	0	BlockInput
; 0	0	0	0	Click ; That causes bug, since it's used twice.
0	0	0	0	ControlClick
0	0	0	0	ControlSend
0	0	0	0	ControlSendRaw
0	0	0	0	CoordMode
0	0	0	0	KeyHistory
0	0	0	0	KeyWait
0	0	0	0	Input
0	0	0	0	MouseClick
0	0	0	0	MouseClickDrag
0	0	0	0	MouseGetPos
0	0	0	0	MouseMove
0	0	0	0	Send
0	0	0	0	SendEvent
0	0	0	0	SendInput
0	0	0	0	SendPlay
0	0	0	0	SendRaw
0	0	0	0	SendLevel
0	0	0	0	SendMode
0	0	0	0	SetCapsLockState
0	0	0	0	SetDefaultMouseSpeed
0	0	0	0	SetKeyDelay
0	0	0	0	SetMouseDelay
0	0	0	0	SetNumLockState
0	0	0	0	SetScrollLockState
0	0	0	0	SetStoreCapslockMode
; Maths
0	0	0	0	Random
0	0	0	0	Transform
; Keywords continuation sections
0	0	0	0	Join
0	0	0	0	LTrim
0	0	0	0	RTrim
0	0	0	0	RTrim0
; Screen Management
0	0	0	0	ImageSearch
0	0	0	0	PixelGetColor
0	0	0	0	PixelSearch
; Miscellaneous commands
0	0	0	0	AutoTrim
0	0	0	0	Edit
0	0	0	0	ListLines
0	0	0	0	ListVars
0	0	0	0	OutputDebug
0	0	0	0	SysGet
0	0	0	0	URLDownloadToFile
; Process Management
0	0	0	0	Process
0	0	0	0	Run
0	0	0	0	RunWait
0	0	0	0	RunAs
0	0	0	0	Shutdown
; Registry Management
0	0	0	0	RegDelete
0	0	0	0	RegRead
0	0	0	0	RegWrite
0	0	0	0	SetRegView
; Sound Commands
0	0	0	0	SoundBeep
0	0	0	0	SoundGet
0	0	0	0	SoundGetWaveVolume
0	0	0	0	SoundPlay
0	0	0	0	SoundSet
0	0	0	0	SoundSetWaveVolume
; String Management
0	0	0	0	FormatTime
0	0	0	0	SetEnv
0	0	0	0	SetFormat
0	0	0	0	Sort
0	0	0	0	StringCaseSense
0	0	0	0	StringGetPos
0	0	0	0	StringLeft
0	0	0	0	StringRight
0	0	0	0	StringLen
0	0	0	0	StringLower
0	0	0	0	StringUpper
0	0	0	0	StringMid
0	0	0	0	StringReplace
0	0	0	0	StringSplit
0	0	0	0	StringTrimLeft
0	0	0	0	StringTrimRight
; Window Management: Controls
0	0	0	0	Control
0	0	0	0	ControlFocus
0	0	0	0	ControlGet
0	0	0	0	ControlGetFocus
0	0	0	0	ControlGetPos
0	0	0	0	ControlGetText
0	0	0	0	ControlMove
0	0	0	0	ControlSetText
0	0	0	0	PostMessage
0	0	0	0	SendMessage
0	0	0	0	SetControlDelay
0	0	0	0	WinMenuSelectItem
; Window Management: Window Groups
0	0	0	0	GroupActivate
0	0	0	0	GroupAdd
0	0	0	0	GroupClose
0	0	0	0	GroupDeactivate
; Window Management
0	0	0	0	DetectHiddenText
0	0	0	0	DetectHiddenWindows
0	0	0	0	SetTitleMatchMode
0	0	0	0	SetWinDelay
0	0	0	0	StatusBarGetText
0	0	0	0	StatusBarWait
0	0	0	0	WinActivate
0	0	0	0	WinActivateBottom
0	0	0	0	WinClose
0	0	0	0	WinGet
0	0	0	0	WinGetActiveStats
0	0	0	0	WinGetActiveTitle
0	0	0	0	WinGetClass
0	0	0	0	WinGetPos
0	0	0	0	WinGetText
0	0	0	0	WinGetTitle
0	0	0	0	WinHide
0	0	0	0	WinKill
0	0	0	0	WinMaximize
0	0	0	0	WinMinimize
0	0	0	0	WinMinimizeAll
0	0	0	0	WinMinimizeAllUndo
0	0	0	0	WinMove
0	0	0	0	WinRestore
0	0	0	0	WinSet
0	0	0	0	WinSetTitle
0	0	0	0	WinShow
0	0	0	0	WinWait
0	0	0	0	WinWaitActive
0	0	0	0	WinWaitNotActive
0	0	0	0	WinWaitClose
; Variables over operators
0	0	0	0	EnvAdd
0	0	0	0	EnvDiv
0	0	0	0	EnvMult
0	0	0	0	EnvSub
;
0	0	0	0	Exception
; More objects stuff
0	0	0	0	Class
0	0	0	0	Extends
0	0	0	0	New
; Keywords relative
0	0	0	0	Mouse
0	0	0	0	Pixel
0	0	0	0	Relative
0	0	0	0	RGB
0	0	0	0	Screen
; Keywords Priority of processes
0	0	0	0	AboveNormal
0	0	0	0	BelowNormal
0	0	0	0	High
0	0	0	0	Low
0	0	0	0	Normal
0	0	0	0	Realtime
; WinTitle values
0	0	0	0	A
0	0	0	0	ahk_class
0	0	0	0	ahk_id
0	0	0	0	ahk_pid
0	0	0	0	ahk_exe
0	0	0	0	ahk_group
; Keywords Used with SetFormat and/or -if Var is [not] type- & BETWEEN/IN
0	0	0	0	Alnum
0	0	0	0	Alpha
0	0	0	0	Between
0	0	0	0	Contains
0	0	0	0	Date
0	0	0	0	Digit
0	0	0	0	Float
0	0	0	0	Floatfast
0	0	0	0	In
0	0	0	0	Integer
0	0	0	0	Integerfast
0	0	0	0	Is
0	0	0	0	Lower
0	0	0	0	Number
0	0	0	0	Time
0	0	0	0	Upper
0	0	0	0	Xdigit
; Expression keywords
0	0	0	0	And
0	0	0	0	Not
0	0	0	0	Or
; Keywords Used with Drive/DriveGet and/or WinGet/WinSet
0	0	0	0	AlwaysOnTop
0	0	0	0	Capacity
0	0	0	0	ControlList
0	0	0	0	Count
0	0	0	0	Eject
0	0	0	0	FileSystem
0	0	0	0	ID
0	0	0	0	IDLast
0	0	0	0	Label
0	0	0	0	List
0	0	0	0	Lock
0	0	0	0	MinMax
0	0	0	0	ProcessName
0	0	0	0	ProcessPath
0	0	0	0	Redraw
0	0	0	0	Region
0	0	0	0	Serial
0	0	0	0	SetLabel
0	0	0	0	Status
0	0	0	0	StatusCD
0	0	0	0	Top
0	0	0	0	Topmost
0	0	0	0	TransColor
0	0	0	0	Transparent
0	0	0	0	Type
0	0	0	0	Unlock
; Keywords — Time units for use with addition and subtraction
0	0	0	0	Seconds
0	0	0	0	Minutes
0	0	0	0	Hours
0	0	0	0	Days
; Keywords For use with the Loop command
0	0	0	0	Read
0	0	0	0	Parse
; Keywords A_ExitReason
0	0	0	0	Close
0	0	0	0	Error
0	0	0	0	LogOff
0	0	0	0	Single
; Keywords used with the "menu" command
0	0	0	0	Add
0	0	0	0	Check
; 0	0	0	0	Click ; That causes bug, since it's used twice.
0	0	0	0	Color
0	0	0	0	Default
; 0	0	0	0	Delete ; That causes bug, since it's used twice.
0	0	0	0	DeleteAll
0	0	0	0	Disable
0	0	0	0	Enable
0	0	0	0	Icon
0	0	0	0	MainWindow
0	0	0	0	NoDefault
0	0	0	0	NoIcon
0	0	0	0	NoMainWindow
0	0	0	0	NoStandard
0	0	0	0	Rename
0	0	0	0	Show
0	0	0	0	Standard
0	0	0	0	Tip
0	0	0	0	ToggleCheck
0	0	0	0	ToggleEnable
0	0	0	0	Tray
0	0	0	0	UnCheck
0	0	0	0	UseErrorLevel
; Keywords Gui control types
0	0	0	0	Button
0	0	0	0	Checkbox
0	0	0	0	ComboBox
0	0	0	0	DateTime
0	0	0	0	DDL
0	0	0	0	DropDownList
;;;0	0	0	0	Edit
0	0	0	0	GroupBox
;;;0	0	0	0	Hotkey
0	0	0	0	ListBox
0	0	0	0	ListView
0	0	0	0	MonthCal
0	0	0	0	Pic
0	0	0	0	Picture
;;;0	0	0	0	Progress
0	0	0	0	Radio
0	0	0	0	Slider
0	0	0	0	StatusBar
;;;0	0	0	0	Tab
0	0	0	0	ActiveX
0	0	0	0	Custom
0	0	0	0	Link
0	0	0	0	Tab2
0	0	0	0	Text
0	0	0	0	TreeView
0	0	0	0	UpDown
; Keywords ListView
0	0	0	0	AutoSize
0	0	0	0	Grid
0	0	0	0	Hdr
0	0	0	0	IconSmall
0	0	0	0	NoSort
0	0	0	0	NoSortHdr
0	0	0	0	Range
0	0	0	0	Report
0	0	0	0	SortDesc
0	0	0	0	Tile
; Keywords General GUI keywords
0	0	0	0	AltSubmit
0	0	0	0	Background
0	0	0	0	BackgroundTrans
0	0	0	0	bold
0	0	0	0	Border
0	0	0	0	Bottom
0	0	0	0	Buttons
0	0	0	0	Caption
0	0	0	0	Center
0	0	0	0	Check3
0	0	0	0	Checked
0	0	0	0	CheckedGray
0	0	0	0	Choose
0	0	0	0	ChooseString
0	0	0	0	Delimiter
0	0	0	0	Destroy
0	0	0	0	Disabled
0	0	0	0	DPIScale
0	0	0	0	Enabled
0	0	0	0	Expand
0	0	0	0	ExStyle
0	0	0	0	First
0	0	0	0	Flash
0	0	0	0	Focus
0	0	0	0	Font
0	0	0	0	Group
0	0	0	0	GuiClose
0	0	0	0	GuiContextMenu
0	0	0	0	GuiDropFiles
0	0	0	0	GuiEscape
0	0	0	0	GuiShow
0	0	0	0	GuiSize
0	0	0	0	Hidden
0	0	0	0	Hide
0	0	0	0	HScroll
0	0	0	0	ImageList
0	0	0	0	italic
0	0	0	0	LastFound
0	0	0	0	LastFoundExist
; 0	0	0	0	Left ; That causes bug, since it's used twice.
0	0	0	0	Limit
0	0	0	0	Lines
0	0	0	0	Lowercase
0	0	0	0	Margin
0	0	0	0	Maximize
0	0	0	0	MaximizeBox
0	0	0	0	MaxSize
0	0	0	0	Minimize
0	0	0	0	MinimizeBox
0	0	0	0	MinSize
0	0	0	0	Move
0	0	0	0	Multi
0	0	0	0	NA
0	0	0	0	NoActivate
0	0	0	0	NoHide
0	0	0	0	Norm
0	0	0	0	NoTab
0	0	0	0	OnClipboardChange
0	0	0	0	OwnDialogs
0	0	0	0	Owner
0	0	0	0	Password
0	0	0	0	Pos
0	0	0	0	ReadOnly
0	0	0	0	Resize
0	0	0	0	Restore
; 0	0	0	0	Right ; That causes bug, since it's used twice.
0	0	0	0	Section
0	0	0	0	strike
0	0	0	0	Style
0	0	0	0	Submit
0	0	0	0	SysMenu
0	0	0	0	TabStop
0	0	0	0	Theme
0	0	0	0	ToolWindow
0	0	0	0	underline
0	0	0	0	Uppercase
0	0	0	0	Vis
0	0	0	0	VisFirst
0	0	0	0	Visible
0	0	0	0	VScroll
0	0	0	0	WantCtrlA
0	0	0	0	WantF2
0	0	0	0	WantReturn
0	0	0	0	Wrap
0	0	0	0	xm
0	0	0	0	xp
0	0	0	0	xs
0	0	0	0	ym
0	0	0	0	yp
0	0	0	0	ys
; Keywords used with the Hotkey command
0	0	0	0	AltTab
0	0	0	0	ShiftAltTab
0	0	0	0	AltTabMenu
0	0	0	0	AltTabAndMenu
0	0	0	0	AltTabMenuDismiss
; Keywords used with the Thread/Process commands
0	0	0	0	Exist
0	0	0	0	Interrupt
0	0	0	0	NoTimers
0	0	0	0	Priority
0	0	0	0	Wait
0	0	0	0	WaitClose
; Keywords used with the Transform command
0	0	0	0	BitAnd
0	0	0	0	BitNot
0	0	0	0	BitOr
0	0	0	0	BitShiftLeft
0	0	0	0	BitShiftRight
0	0	0	0	BitXOr
0	0	0	0	Deref
0	0	0	0	FromCodePage
0	0	0	0	Pow
0	0	0	0	ToCodePage
0	0	0	0	Unicode
; Keywords used with "IfMsgBox"
0	0	0	0	Yes
0	0	0	0	No
0	0	0	0	Ok
0	0	0	0	Cancel
;;;0	0	0	0	Continue
0	0	0	0	Abort
0	0	0	0	Retry
0	0	0	0	Ignore
0	0	0	0	TryAgain
; Keywords used with various commands
0	0	0	0	On
0	0	0	0	Off
0	0	0	0	All
; Keywords from Registry
0	0	0	0	HKEY_LOCAL_MACHINE
0	0	0	0	HKEY_USERS
0	0	0	0	HKEY_CURRENT_USER
0	0	0	0	HKEY_CLASSES_ROOT
0	0	0	0	HKEY_CURRENT_CONFIG
0	0	0	0	HKLM
0	0	0	0	HKU
0	0	0	0	HKCU
0	0	0	0	HKCR
0	0	0	0	HKCC
0	0	0	0	REG_SZ
0	0	0	0	REG_EXPAND_SZ
0	0	0	0	REG_MULTI_SZ
0	0	0	0	REG_DWORD
0	0	0	0	REG_QWORD
0	0	0	0	REG_BINARY
0	0	0	0	REG_LINK
0	0	0	0	REG_RESOURCE_LIST
0	0	0	0	REG_FULL_RESOURCE_DESCRIPTOR
0	0	0	0	REG_RESOURCE_REQUIREMENTS_LIST
0	0	0	0	REG_DWORD_BIG_ENDIAN
; #Warn
0	0	0	0	LocalSameAsGlobal
0	0	0	0	UseEnv
0	0	0	0	UseUnsetGlobal
0	0	0	0	UseUnsetLocal
; BlockInput modes
0	0	0	0	SendAndMouse
0	0	0	0	MouseMoveOff
; Keywords
0	0	0	0	Base
0	0	0	0	ControlListHWND
0	0	0	0	Force
0	0	0	0	HWND
0	0	0	0	MonitorCount
0	0	0	0	MonitorName
0	0	0	0	MonitorPrimary
0	0	0	0	Monitor
0	0	0	0	MonitorWorkArea
0	0	0	0	PID
0	0	0	0	RegEx
;;;0	0	0	0	shutdown
0	0	0	0	WantTab
;;;0	0	0	0	{Blind}
;;;0	0	0	0	{Click}
;;;0	0	0	0	{Raw}
;;;0	0	0	0	{AltDown}
;;;0	0	0	0	{AltUp}
;;;0	0	0	0	{ShiftDown}
;;;0	0	0	0	{ShiftUp}
;;;0	0	0	0	{CtrlDown}
;;;0	0	0	0	{CtrlUp}
;;;0	0	0	0	{LWinDown}
;;;0	0	0	0	{LWinUp}
;;;0	0	0	0	{RWinDown}
;;;0	0	0	0	{RWinUp}
;
; 0	0	0	0	_addref
; 0	0	0	0	_clone
; 0	0	0	0	_getaddress
; 0	0	0	0	_getcapacity
; 0	0	0	0	_insert
; 0	0	0	0	_maxindex
; 0	0	0	0	_minindex
; 0	0	0	0	_newenum
; 0	0	0	0	_release
; 0	0	0	0	_remove
; 0	0	0	0	_setcapacity
; 0	0	0	0	LTrim
; 0	0	0	0	objaddref
; 0	0	0	0	objclone
; 0	0	0	0	object
; 0	0	0	0	objgetaddress
; 0	0	0	0	objgetcapacity
; 0	0	0	0	objinsert
; 0	0	0	0	objmaxindex
; 0	0	0	0	objminindex
; 0	0	0	0	objnewenum
; 0	0	0	0	objrelease
; 0	0	0	0	objremove
; 0	0	0	0	objsetcapacity
; 0	0	0	0	RTrim
; ;
; 0	0	0	0	RequireAdmin


;----------------------------------------------;
;                   CodeFold                   ;
;----------------------------------------------;

;Flags (sum of the members)
;      1  case sensitive.
;      2  force get fold name for function list from left at the fold start ("Folds:" section only).
;      4  force get fold name for function list from right at the fold start, including fold start ("Folds:" section only).
;      8  fold start located at line start ("Folds:" section only).
;     16  fold start located at line end ("Folds:" section only).
;     32  fold end located at line start ("Folds:" section only).
;     64  fold end located at line end ("Folds:" section only).
;    128  don't catch fold end ("Folds:" section) or skip end ("Skips:" section).
;    256  additional to 128 flag - more priority is given to sibling level instead of parent level ("Folds:" section only).
;    512  comment fold - fold ignore any other folds and skips inside ("Folds:" section only).
;   1024  reserved.
;   2048  deny fold - founded fold will be ignored ("Folds:" section only).
;   4096  xml fold - "<tag" and "</tag>", "<single" and "/>", "<single" and ">" ("Folds:" section only).
;   8192  don't check delimiters from left of fold start ("Folds:" section only).
;  16384  don't check delimiters from right of fold start ("Folds:" section only).
;  32768  don't check delimiters from left of fold end ("Folds:" section only).
;  65536  don't check delimiters from right of fold end ("Folds:" section only).
; 131072  deny delimiters ("Folds:" section only).
; 262144  don't show fold in list ("Folds:" section only).
;Флаги (сумма членов)
;       1  учитывать регистр.
;       2  форсировать получение имени для списка слева от начала блока (секция "Folds:").
;       4  форсировать получение имени для списка справа от начала блока, включая начало блока (секция "Folds:").
;       8  начало блока находится в начале строки (секция "Folds:").
;      16  начало блока находится в конце строки (секция "Folds:").
;      32  конец блока находится в начале строки (секция "Folds:").
;      64  конец блока находится в конце строки (секция "Folds:").
;     128  не захватывать конец блока (секция "Folds:") или конец пропуска (секция "Skips:").
;     256  добавочный для 128 флаг - больший приоритет отдается блокам находящимся на одном уровне вместо родительского (секция "Folds:").
;     512  блок с комментариями - все вложенные блоки игнорируются (секция "Folds:").
;    1024  зарезервирован.
;    2048  блок запрещен - найденный блок будет проигнорирован (секция "Folds:").
;    4096  xml блок - "<tag" и "</tag>", "<single" и "/>", "<single" и ">" (секция "Folds:").
;    8192  не проверять разделители слева от начала блока (секция "Folds:").
;   16384  не проверять разделители справа от начала блока (секция "Folds:").
;   32768  не проверять разделители слева от конца блока (секция "Folds:").
;   65536  не проверять разделители справа от конца блока (секция "Folds:").
;  131072  разделители запрещены (секция "Folds:").
;  262144  не отображать блок в списке (секция "Folds:").
; 1048576  регулярное выражение фиксированной длины в начале блока (секция "Folds:") или начале пропуска (секция "Skips:").
; 2097152  регулярное выражение фиксированной длины в конце блока (секция "Folds:") или конце пропуска (секция "Skips:").


FoldPanel:
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
; PanelFirstBkColor            PanelSecondBkColor             PanelNormalFoldColor             PanelActiveFoldColor             PanelNormalNodeOpenBkColor             PanelNormalNodeCloseBkColor             PanelActiveNodeOpenBkColor             PanelActiveNodeCloseBkColor             PanelNormalNodeOpenSignColor             PanelNormalNodeCloseSignColor             PanelActiveNodeOpenSignColor             PanelActiveNodeCloseSignColor
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${CodeFold_PanelFirstBkColor} ${CodeFold_PanelSecondBkColor} ${CodeFold_PanelNormalFoldColor} ${CodeFold_PanelActiveFoldColor} ${CodeFold_PanelNormalNodeOpenBkColor} ${CodeFold_PanelNormalNodeCloseBkColor} ${CodeFold_PanelActiveNodeOpenBkColor} ${CodeFold_PanelActiveNodeCloseBkColor} ${CodeFold_PanelNormalNodeOpenSignColor} ${CodeFold_PanelNormalNodeCloseSignColor} ${CodeFold_PanelActiveNodeOpenSignColor} ${CodeFold_PanelActiveNodeCloseSignColor}


FoldList:
;================================================
; ListTextColor            ListBkColor
;================================================
${CodeFold_ListTextColor} ${CodeFold_ListBkColor}


TagMark:
;============================================================================================================
; TagMarkFlags            TagMarkFontStyle             TagMarkTextColor             TagMarkBkColor
;============================================================================================================
${CodeFold_TagMarkFlags} ${CodeFold_TagMarkFontStyle} ${CodeFold_TagMarkTextColor} ${CodeFold_TagMarkBkColor}


Skips:
;=============================
; Flags  Skip    Skip    Escape
;       start   end     char
;=============================
; 1	`"`	`"`	"\"
; 1	`'`	`'`	"\"
; 1	"//"	""	":"


Folds:
;==============================================================
; Flags  Font    Color   Color   Fold       Fold      Delimiters
;       style   text    bkgrnd  start      end
;==============================================================
; set flag 1 if you want nesting folds
; set flag 513 if you want skipping folds inside
1	0	0	0	";["	";]"	""
1	0	0	0	";{"	";}"	""
1	0	0	0	";("	";)"	""
; 1	0	0	0	"["	"]"	""
; 1	0	0	0	"{"	"}"	""
; 1	0	0	0	"("	")"	""
; 262145=1+262144
262145	3	${COMM}	0	"/*"	"*/"	""


;----------------------------------------------;
;                 AutoComplete                 ;
;----------------------------------------------;

Blocks:
;======================================================================
; Abbreviations and blocks
;
; $~abbr   normal abbreviation.
; $=abbr   exact abbreviation. May contain delimiters.
; $[]      set caret to this position. Can be multiple (hot spots).
; $[text]  select text. Can be multiple (hot spots).
; $$       symbol $.
; $\]      escape symbol ]. Can be used in $[text] block: $[One [1$\] ].
; ${VAR}   variable assigned from Coder::Settings.
; $;       comment line.
;======================================================================

$~#ClipboardTimeout, Milliseconds
#ClipboardTimeout, $[Milliseconds]

$~#CommentFlag, NewString
#CommentFlag, $[NewString]

$~#EscapeChar, NewChar
#EscapeChar, $[NewChar]

$~#DerefChar, NewChar
#EscapeChar, $[NewChar]

$~#Delimiter, NewChar
#EscapeChar, $[NewChar]

$~#HotkeyInterval, Value
#HotkeyInterval, $[Value]

$~#HotkeyModifierTimeout, Milliseconds
#HotkeyModifierTimeout, $[Milliseconds]

$~#Hotstring, NewOptions
#Hotstring, $[NewOptions]

$~#If [, Expression]
#If,$[ Expression]

$~#IfTimeout, Timeout
#IfTimeout, $[Timeout]

$~#IfWinActive [, WinTitle, WinText]
#IfWinActive,$[ WinTitle],$[ WinText]

$~#IfWinExist [, WinTitle, WinText]
#IfWinExist,$[ WinTitle],$[ WinText]

$~#IfWinNotActive [, WinTitle, WinText]
#IfWinNotActive,$[ WinTitle],$[ WinText]

$~#IfWinNotExist [, WinTitle, WinText]
#IfWinNotExist,$[ WinTitle],$[ WinText]

$~#Include, FileName
#Include,$[ FileName]

$~#IncludeAgain, FileName
#IncludeAgain,$[ FileName]

$~#InputLevel [, Level=0…100]
#InputLevel,$[ Level=0…100]

$~#KeyHistory, MaxEvents
#KeyHistory, $[MaxEvents]

$~#LTrim, [Off]
#LTrim,$[ Off]

$~#MaxHotkeysPerInterVal, Value
#MaxHotkeysPerInterVal, $[Value]

$~#MaxMem, ValueInMegabytes
#MaxMem, $[ValueInMegabytes]

$~#MaxThreads, Value
#MaxThreads, $[Value]

$~#MaxThreadsBuffer, On|Off
#MaxThreadsBuffer, $[On|Off]

$~#MaxThreadsPerHotkey, Value=1…20
#MaxThreadsPerHotkey, $[Value=1…20]

$~#MenuMaskKey, Keyname
#MenuMaskKey, $[Keyname]

$~#SingleInstance, [Force|Ignore|Off]
#SingleInstance,$[ Force|Ignore|Off]

$~#UseHook [, On|Off]
#UseHook,$[ On|Off]

$~#Warn [, WarningType, WarningMode]
#Warn,$[ All|LocalSameAsGlobal|UseEnv|UseUnsetLocal|UseUnsetGlobal],$[ MsgBox|StdOut|OutputDebug|Off]

$~AutoTrim, On|Off
AutoTrim, $[On|Off]

$~BlockInput, On|Off|Send|Mouse|SendAndMouse|Default|MouseMove|MouseMoveOff
BlockInput,$[ On|Off|Send|Mouse|SendAndMouse|Default|MouseMove|MouseMoveOff]

$~Break[, LoopLabel]
Break,$[ LoopLabel]

$~ClipWait [, SecondsToWait, 1]
ClipWait,$[ SecondsToWait],$[ 1]

$~Catch [, OutputVar]
Catch,$[ OutputVar]

$~Continue[, LoopLabel]
Continue,$[ LoopLabel]

$~Control, Cmd [, Value, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
Control, $[Cmd],$[ Value],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlClick [, Control-or-Pos, WinTitle, WinText, WhichButton, ClickCount, Options, ExcludeTitle, ExcludeText]
ControlClick,$[ Control-or-Pos],$[ WinTitle],$[ WinText],$[ WhichButton],$[ ClickCount],$[ Options=NA|D|U|Pos|Xn|Yn],$[ ExcludeTitle],$[ ExcludeText]

$~ControlFocus [, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlFocus,$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlGet, OutputVar, List|Checked|Visible|Tab|FindString|Choice|Line|LineCount|CurrentLine|CurrentCol|Selected|ExStyle|Style|Hwnd [, Value, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlGet, $[OutputVar], $[List|Checked|Visible|Tab|FindString|Choice|Line|LineCount|CurrentLine|CurrentCol|Selected|ExStyle|Style|Hwnd],$[ Value],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlGetFocus, OutputVar, [WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlGetFocus, $[OutputVar],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlGetPos [, X, Y, Width, Height, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlGetPos,$[ X],$[ Y],$[ Width],$[ Height],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlGetText, OutputVar [, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlGetText, $[OutputVar],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlMove, Control, X|Exp, Y|Exp, Width|Exp, Height|Exp [, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlMove, $[Control], $[X|Exp], $[Y|Exp], $[Width|Exp], $[Height|Exp],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlSend [, Control, Keys, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlSend,$[ Control],$[ Keys],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlSendRaw [, Control, Keys, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlSendRaw,$[ Control],$[ Keys],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~ControlSetText [, Control, NewText, WinTitle, WinText, ExcludeTitle, ExcludeText]
ControlSetText,$[ Control],$[ NewText],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~CoordMode, ToolTip|Pixel|Mouse [, Screen|Relative|Window|Client]
CoordMode, $[ToolTip|Pixel|Mouse],$[ Screen|Relative|Window|Client]

$~Critical [, On|Off|#(ms)]
Critical,$[ On|Off|#(ms)]

$~DetectHiddenText, On|Off
DetectHiddenText, $[On|Off]

$~DetectHiddenWindows, On|Off
DetectHiddenWindows, $[On|Off]

$~Drive, Label|Lock|Unlock|Eject [, Drive, Value]
Drive, $[Label|Lock|Unlock|Eject],$[ Drive],$[ Value]

$~DriveGet, OutputVar, List|Cap|Capacity|FS|FileSystem|Label|Serial|Type|Status|StatusCD [, Value]
DriveGet, $[OutputVar], $[List|Cap|Capacity|FS|FileSystem|Label|Serial|Type|Status|StatusCD],$[ Value]

$~DriveSpaceFree, OutputVar, Path=C:\\
DriveSpaceFree, $[OutputVar], $[Path=C:\\]

$~EnvAdd, Var, Value [, TimeUnits]
EnvAdd, $[Var], $[Value],$[ TimeUnits]

$~EnvDiv, Var, Value
EnvDiv, $[Var], $[Value]

$~EnvGet, OutputVar, EnvVarName
EnvGet, $[OutputVar], $[EnvVarName]

$~EnvMult, Var, Value
EnvMult, $[Var], $[Value]

$~EnvSet, EnvVar, Value
EnvSet, $[EnvVar], $[Value]

$~EnvSub, Var, Value [, TimeUnits]
EnvSub, $[Var], $[Value],$[ TimeUnits]

$~Exit [, ExitCode]
Exit,$[ ExitCode]

$~ExitApp [, ExitCode]
ExitApp,$[ ExitCode]

$~FileAppend [, Text, Filename, Encoding]
FileAppend,$[ Text],$[ Filename],$[ Encoding=UTF-8|UTF-16|UTF-8-RAW|UTF-16-RAW|CPnnnnn]

$~FileCopy, Source, Dest [, Flag=0|1(1 = overwrite)]
FileCopy, $[Source], $[Dest],$[ Flag=0|1(1 = overwrite)]

$~FileCopyDir, Source, Dest [, Flag=0|1(1 = overwrite)]
FileCopyDir, $[Source], $[Dest],$[ Flag=0|1(1 = overwrite)]

$~FileCreateDir, Path
FileCreateDir, $[Path]

$~FileCreateShortcut, Target, C:\\My Shortcut.lnk [, WorkingDir, Args, Description, IconFile, ShortcutKey, IconNumber, RunState]
FileCreateShortcut, $[Target], $[C:\\My Shortcut.lnk],$[ WorkingDir],$[ Args],$[ Description],$[ IconFile],$[ ShortcutKey],$[ IconNumber],$[ RunState]

$~FileDelete, FilePattern
FileDelete, $[FilePattern]

$~FileEncoding [, UTF-8|UTF-16|UTF-8-RAW|UTF-16-RAW|CPnnnnn]
FileEncoding, $[UTF-8|UTF-16|UTF-8-RAW|UTF-16-RAW|CPnnnnn]

$~FileGetAttrib, OutputVar(RASHNDOCT) [, Filename]
FileGetAttrib, $[OutputVar(RASHNDOCT)],$[ Filename]

$~FileGetShortcut, LinkFile [, OutTarget, OutDir, OutArgs, OutDescription, OutIcon, OutIconNum, OutRunState]
FileGetShortcut, $[LinkFile],$[ OutTarget],$[ OutDir],$[ OutArgs],$[ OutDescription],$[ OutIcon],$[ OutIconNum],$[ OutRunState]

$~FileGetSize, OutputVar [, Filename, Units=K|M]
FileGetSize, $[OutputVar],$[ Filename],$[ Units=K|M]

$~FileGetTime, OutputVar [, Filename, WhichTime?=(M(Default)|C|A)]
FileGetTime, $[OutputVar],$[ Filename],$[ WhichTime?=(M(Default)|C|A)]

$~FileGetVersion, OutputVar [, Filename]
FileGetVersion, $[OutputVar],$[ Filename]

$~FileInstall, Source, Dest [, Flag=0|1(1 = overwrite)]
FileInstall, $[Source], $[Dest],$[ Flag=0|1(1 = overwrite)]

$~FileMove, Source, Dest [, Flag=0|1(1 = overwrite)]
FileMove, $[Source], $[Dest],$[ Flag=0|1(1 = overwrite)]

$~FileMoveDir, Source, Dest [, Flag=0|1|2|R(2=force overwrite)]
FileMoveDir, $[Source], $[Dest],$[ Flag=0|1|2|R(2=force overwrite)]

$~FileRead, OutputVar, Filename
FileRead, $[OutputVar], $[Filename]

$~FileReadLine, OutputVar, Filename, LineNum|Exp
FileReadLine, $[OutputVar], $[Filename], $[LineNum|Exp]

$~FileRecycle, FilePattern
FileRecycle, $[FilePattern]

$~FileRecycleEmpty [, C:\\]
FileRecycleEmpty,$[ C:\\]

$~FileRemoveDir, Path [, Recurse?=0|1|Exp]
FileRemoveDir, $[Path],$[ Recurse?=0|1|Exp]

$~FileSelectFile, OutputVar [, Options, RootDir[\\DefaultFilename], Prompt, Filter]
FileSelectFile, $[OutputVar],$[ Options],$[ RootDir[\\DefaultFilename$\]],$[ Prompt],$[ Filter]

$~FileSelectFolder, OutputVar [, StartingFolder, Options, Prompt]
FileSelectFolder, $[OutputVar],$[ *C:\],$[ Options],$[ Prompt]

$~FileSetAttrib, Attributes(+-^RASHNOT) [, FilePattern, OperateOnFolders?, Recurse?]
FileSetAttrib, $[Attributes(+-^RASHNOT)],$[ FilePattern],$[ OperateOnFolders?],$[ Recurse?]

$~FileSetTime [, YYYYMMDDHH24MISS, FilePattern, WhichTime?=M(Default)|C|A, OperateOnFolders?, Recurse?]
FileSetTime,$[ YYYYMMDDHH24MISS],$[ FilePattern],$[ WhichTime?=M(Default)|C|A],$[ OperateOnFolders=0|1|2|Expression],$[ Recurse=0|1|Expression]

$~For Key [, Val] In Expression: ObjOrVar
For $[Key]$[, Val] In $[Expression: ObjOrVar]
${AutoComplete_Indent}$[]

$~For Key [, Val] In Expression: ObjOrVar {…}
For $[Key]$[, Val] In $[Expression: ObjOrVar]
{
${AutoComplete_Indent}$[]
}

$~FormatTime, OutputVar [, YYYYMMDDHH24MISS, Format]
FormatTime, $[OutputVar],$[ YYYYMMDDHH24MISS],$[ Format]

$~GetKeyState, OutputVar, WhichKey [, Mode=P|T]
GetKeyState, $[OutputVar], $[WhichKey],$[ Mode=P|T]

$~GoSub, Label
GoSub, $[Label]

$~GoTo, Label
GoTo, $[Label]

$~GroupActivate, GroupName [, Recent?=R]
GroupActivate, $[GroupName],$[ Recent?=R]

$~GroupAdd, GroupName [, WinTitle, WinText, Label, ExcludeTitle, ExcludeText]
GroupAdd, $[GroupName],$[ WinTitle],$[ WinText],$[ Label],$[ ExcludeTitle],$[ ExcludeText]

$~GroupClose, GroupName [, AllOrRecent?=A|R]
GroupClose, $[GroupName],$[ AllOrRecent?=A|R]

$~GroupDeactivate, GroupName [, Recent?=R]
GroupDeactivate, $[GroupName],$[ Recent?=R]

$~Gui, Sub-command [, Param2, Param3, Param4]
Gui, $[Sub-command],$[ Param2],$[ Param3],$[ Param4]

$~GuiControl, Sub-command, ControlID [, Param3]
GuiControl, $[Sub-command], $[ControlID],$[ Param3]

$~GuiControlGet, OutputVar [, (Blank)|Pos|Focus|FocusV|Enabled|Visible|Hwnd|Name, ControlID, Param4]
GuiControlGet, $[OutputVar],$[ (Blank)|Pos|Focus|FocusV|Enabled|Visible|Hwnd|Name],$[ ControlID],$[ Param4]

$~Hotkey, KeyName [, Label, Options]
Hotkey, $[KeyName],$[ Label],$[ Options]

$~Hotkey, IfWin(Not)Active/Exist [, WinTitle, WinText]
Hotkey, $[IfWinActive|IfWinNotActive|IfWinExist|IfWinNotExist],$[ WinTitle],$[ WinText]

$~Hotkey, If, Expression
Hotkey, If,$[ Expression]

$~ImageSearch, OutputVarX, OutputVarY, X1|Exp, Y1|Exp, X2|Exp, Y2|Exp, ImageFile
ImageSearch, $[OutputVarX], $[OutputVarY], $[X1|Exp], $[Y1|Exp], $[X2|Exp], $[Y2|Exp], $[ImageFile]

$~IniDelete, Filename, Section [, Key]
IniDelete, $[Filename], $[Section],$[ Key]

$~IniRead, OutputVar, Filename [, Section, Key, Default]
IniRead, $[OutputVar], $[Filename],$[ Section],$[ Key],$[ Default]

$~IniWrite, Value, Filename, Section [, Key]
IniWrite, $[Value], $[Filename], $[Section],$[ Key]

$~Input [, OutputVar, Options, EndKeys, MatchList]
Input,$[ OutputVar],$[ Options],$[ EndKeys=BCIMLTV*],$[ MatchList]

$~InputBox, OutputVar [, Title, Prompt, HIDE, Width, Height, X, Y, Font, Timeout, Default]
InputBox, $[OutputVar],$[ Title],$[ Prompt],$[ HIDE],$[ Width],$[ Height],$[ X],$[ Y],,$[ Timeout],$[ Default]

$~KeyWait, KeyName [, Options=D|L|Tnumber]
KeyWait, $[KeyName],$[ Options=D|L|Tnumber]

$~ListLines [, On|Off]
ListLines,$[ On|Off]

$~Loop [, Count]
Loop,$[ Count]
${AutoComplete_Indent}$[]

$~Loop, FilePattern [, IncludeFolders?, Recurse?=0|1]
Loop, $[FilePattern],$[ IncludeFolders?],$[ Recurse?=0|1]
${AutoComplete_Indent}$[]

$~Loop, Parse, InputVar [, Delimiters|CSV, OmitChars]
Loop, Parse, $[InputVar],$[ Delimiters|CSV],$[ OmitChars]
${AutoComplete_Indent}$[]

$~Loop, Read, InputFile [, OutputFile]
Loop, Read, $[InputFile],$[ OutputFile]
${AutoComplete_Indent}$[]

$~Loop, RootKey=HKLM|HKU|HKCU|HKCR|HKCC [, Key, IncludeSubkeys?, Recurse?=0|1]
Loop, $[RootKey=HKLM|HKU|HKCU|HKCR|HKCC],$[ Key],$[ IncludeSubkeys?],$[ Recurse?=0|1]
${AutoComplete_Indent}$[]

$~Loop [, Count] {…}
Loop,$[ Count]
{
${AutoComplete_Indent}$[]
}

$~Loop, FilePattern [, IncludeFolders?, Recurse?=0|1] {…}
Loop, $[FilePattern],$[ IncludeFolders?],$[ Recurse?=0|1]
{
${AutoComplete_Indent}$[]
}

$~Loop, Parse, InputVar [, Delimiters|CSV, OmitChars] {…}
Loop, $[Parse], $[InputVar],$[ Delimiters|CSV],$[ OmitChars]
{
${AutoComplete_Indent}$[]
}

$~Loop, Read, InputFile [, OutputFile] {…}
Loop, $[Read], $[InputFile],$[ OutputFile]
{
${AutoComplete_Indent}$[]
}

$~Loop, HKLM|HKU|HKCU|HKCR|HKCC [, Key, IncludeSubkeys?, Recurse?=0|1] {…}
Loop, $[HKLM|HKU|HKCU|HKCR|HKCC],$[ Key],$[ IncludeSubkeys?],$[ Recurse?=0|1]
{
${AutoComplete_Indent}$[]
}

$~Menu, MenuName, Cmd [, P3, P4, P5]
Menu, $[MenuName], $[Cmd],$[ P3],$[ P4],$[ P5]

$~Menu, MenuName, Icon, MenuItemName, FileName [, IconNumber, IconWidth]
Menu, $[MenuName], Icon, $[MenuItemName], $[FileName],$[ IconNumber],$[ IconWidth]

$~MouseClick [, WhichButton, X|Exp, Y|Exp, ClickCount, Speed=0…100|Exp, DownOrUp?=D|U, Relative?=R]
MouseClick,$[ WhichButton],$[ X|Exp],$[ Y|Exp],$[ ClickCount],$[ Speed=0…100|Exp],$[ DownOrUp?=D|U],$[ Relative?=R]

$~MouseClickDrag, WhichButton, X1|Exp, Y1|Exp, X2|Exp, Y2|Exp [, Speed=0…100|Exp, Relative?=R]
MouseClickDrag, $[WhichButton],$[ X1|Exp],$[ Y1|Exp],$[ X2|Exp],$[ Y2|Exp],$[ Speed=0…100|Exp],$[ Relative?=R]

$~MouseGetPos [, OutputVarX, OutputVarY, OutputVarWin, OutputVarControl, 1|2|3]
MouseGetPos,$[ OutputVarX],$[ OutputVarY],$[ OutputVarWin],$[ OutputVarControl],$[ 1|2|3]

$~MouseMove, X, Y [, Speed=0…100|Exp, Relative?=R]
MouseMove, $[X], $[Y],$[ Speed=0…100|Exp],$[ Relative?=R]

$~MsgBox, Text
MsgBox, $[Text]

$~MsgBox [, Options, Title, Text, Timeout]
MsgBox,$[ Options],$[ Title],$[ Text],$[ Timeout]

$~OnExit [, Label]
OnExit,$[ Label]

$~OutputDebug, Text
OutputDebug, $[Text]

$~Pause [, On|Off|Toggle, OperateOnUnderlyingThread?]
Pause,$[ On|Off|Toggle],$[ OperateOnUnderlyingThread=0|1]

$~PixelGetColor, OutputVar, X|Exp, Y|Exp [, Alt? Slow? RGB?]
PixelGetColor, $[OutputVar], $[X|Exp], $[Y|Exp],$[ Alt? Slow? RGB?]

$~PixelSearch, OutputVarX, OutputVarY, X1, Y1, X2, Y2, ColorID [, Variation, Fast? RGB?]
PixelSearch, $[OutputVarX], $[OutputVarY], $[X1], $[Y1], $[X2], $[Y2], $[ColorID],$[ Variation],$[ Fast? RGB?]

$~PostMessage, Msg [, wParam, lParam, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
PostMessage, $[Msg],$[ wParam],$[ lParam],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~Process, Exist|Close|Priority|Wait|WaitClose, PID-or-Name [, Param3]
Process, $[Exist|Close|Priority|Wait|WaitClose], $[PID-or-Name],$[ Param3]

$~Progress, Param1 [, SubText, MainText, WinTitle, FontName]
Progress, $[Param1],$[ SubText],$[ MainText],$[ WinTitle],$[ FontName]

$~Progress, Off
Progress, Off

$~Random, OutputVar [, Min, Max]
Random, $[OutputVar],$[ Min],$[ Max]

$~Random,, NewSeed
Random,, $[NewSeed]

$~RegDelete, HKLM|HKU|HKCU|HKCR|HKCC, SubKey [, ValueName]
RegDelete, $[HKLM|HKU|HKCU|HKCR|HKCC], $[SubKey],$[ ValueName]

$~RegRead, OutputVar, HKLM|HKU|HKCU|HKCR|HKCC, SubKey [, ValueName]
RegRead, $[OutputVar], $[HKLM|HKU|HKCU|HKCR|HKCC], $[SubKey],$[ ValueName]

$~RegWrite, REG_SZ|REG_EXPAND_SZ|REG_MULTI_SZ|REG_DWORD|REG_BINARY, HKLM|HKU|HKCU|HKCR|HKCC, SubKey [, ValueName, Value]
RegWrite, $[REG_SZ|REG_EXPAND_SZ|REG_MULTI_SZ|REG_DWORD|REG_BINARY], $[HKLM|HKU|HKCU|HKCR|HKCC], $[SubKey],$[ ValueName],$[ Value]

$~Return [, Expression]
Return,$[ Expression]

$~Run, Target [, WorkingDir, Max|Min|Hide|UseErrorLevel, OutputVarPID]
Run, $[Target],$[ WorkingDir],$[ Max|Min|Hide|UseErrorLevel],$[ OutputVarPID]

$~RunAs [, User, Password, Domain] 
RunAs,$[ User],$[ Password],$[ Domain] 

$~RunWait, Target [, WorkingDir, Max|Min|Hide|UseErrorLevel, OutputVarPID]
RunWait, $[Target],$[ WorkingDir],$[ Max|Min|Hide|UseErrorLevel],$[ OutputVarPID]

$~Send, Keys
Send, $[Keys]

$~SendEvent, Keys
SendEvent, $[Keys]

$~SendInput, Keys
SendInput, $[Keys]

$~SendLevel [, Level=0…100|Exp]
SendLevel,$[ Level=0…100|Exp]

$~SendMessage, Msg [, wParam, lParam, Control, WinTitle, WinText, ExcludeTitle, ExcludeText]
SendMessage, $[Msg],$[ wParam],$[ lParam],$[ Control],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~SendMode, Event|Play|Input|InputThenPlay
SendMode, $[Event|Play|Input|InputThenPlay]

$~SendPlay, Keys
SendPlay, $[Keys]

$~SendRaw, Keys
SendRaw, $[Keys]

$~SetBatchLines, -1|N ms|LineCount
SetBatchLines, $[-1|N ms|LineCount]

$~SetCapsLockState [, On|Off|AlwaysOn|AlwaysOff]
SetCapsLockState,$[ On|Off|AlwaysOn|AlwaysOff]

$~SetControlDelay, Delay=-1|…ms|Exp
SetControlDelay, $[Delay=-1|…ms|Exp]

$~SetDefaultMouseSpeed, Speed=0…100|Exp
SetDefaultMouseSpeed, $[Speed=0…100|Exp]

$~SetEnv, Var, Value
SetEnv, $[Var], $[Value]

$~SetFormat, Integer|IntegerFast|Float|FloatFast, TotalWidth.DecimalPlaces|Hex|D
SetFormat, $[Integer|IntegerFast|Float|FloatFast], $[TotalWidth.DecimalPlaces|Hex|D]

$~SetKeyDelay [, Delay, PressDuration, Play?]
SetKeyDelay,$[ Delay],$[ PressDuration],$[ Play]

$~SetMouseDelay, Delay=-1…n|Exp(ms) [, Play?]
SetMouseDelay, $[Delay=-1…n|Exp(ms)],$[ Play]

$~SetNumLockState [, On|Off|AlwaysOn|AlwaysOff]
SetNumLockState,$[ On|Off|AlwaysOn|AlwaysOff]

$~SetRegView, RegView=32|64|Default
SetRegView, $[RegView=32|64|Default]

$~SetScrollLockState [, On|Off|AlwaysOn|AlwaysOff]
SetScrollLockState,$[ On|Off|AlwaysOn|AlwaysOff]

$~SetStoreCapslockMode, On|Off
SetStoreCapslockMode, $[On|Off]

$~SetTimer [, Label, Period|On|Off, Priority]
SetTimer,$[ Label],$[ Period|On|Off],$[ Priority]

$~SetTitleMatchMode, Fast|Slow
SetTitleMatchMode, $[Fast|Slow]

$~SetTitleMatchMode, RegEx|1|2|3
SetTitleMatchMode, $[RegEx|1|2|3]

$~SetWinDelay, Delay=-1…100|Exp
SetWinDelay, $[Delay=-1…100|Exp]

$~SetWorkingDir, DirName
SetWorkingDir, $[DirName]

$~Shutdown, Code
Shutdown, $[Code]

$~Sleep, Delay
Sleep, $[Delay]

$~Sort, VarName [, Options]
Sort, $[VarName],$[ Options]

$~SoundBeep [, Frequency, Duration]
SoundBeep,$[ Frequency],$[ Duration]

$~SoundGet, OutputVar [, MASTER|SPEAKERS|DIGITAL|LINE|MICROPHONE|SYNTH|CD|TELEPHONE|PCSPEAKER|WAVE|AUX|ANALOG|HEADPHONES|N/A[:number], VOL|VOLUME|ONOFF|MUTE|MONO|LOUDNESS|STEREOENH|BASSBOOST|PAN|QSOUNDPAN|BASS|TREBLE|EQUALIZER, DeviceNumber]
SoundGet, $[OutputVar],$[ MASTER|SPEAKERS|DIGITAL|LINE|MICROPHONE|SYNTH|CD|TELEPHONE|PCSPEAKER|WAVE|AUX|ANALOG|HEADPHONES|N/A:number],$[ VOL|VOLUME|ONOFF|MUTE|MONO|LOUDNESS|STEREOENH|BASSBOOST|PAN|QSOUNDPAN|BASS|TREBLE|EQUALIZER],$[ DeviceNumber]

$~SoundGetWaveVolume, OutputVar [, DeviceNumber]
SoundGetWaveVolume, $[OutputVar],$[ DeviceNumber]

$~SoundPlay, Filename [, Wait]
SoundPlay, $[Filename],$[ Wait]

$~SoundSet, NewSetting [, MASTER|SPEAKERS|DIGITAL|LINE|MICROPHONE|SYNTH|CD|TELEPHONE|PCSPEAKER|WAVE|AUX|ANALOG|HEADPHONES|N/A[:num], VOL|VOLUME|ONOFF|MUTE|MONO|LOUDNESS|STEREOENH|BASSBOOST|PAN|QSOUNDPAN|BASS|TREBLE|EQUALIZER, DeviceNumber]
SoundSet, $[NewSetting],$[ MASTER|SPEAKERS|DIGITAL|LINE|MICROPHONE|SYNTH|CD|TELEPHONE|PCSPEAKER|WAVE|AUX|ANALOG|HEADPHONES|N/A:2],$[ VOL|VOLUME|ONOFF|MUTE|MONO|LOUDNESS|STEREOENH|BASSBOOST|PAN|QSOUNDPAN|BASS|TREBLE|EQUALIZER],$[ DeviceNumber]

$~SoundSetWaveVolume, Percent=[±]0…100|Exp [, DeviceNumber]
SoundSetWaveVolume, $[Percent=[±$\]0…100|Exp],$[ DeviceNumber]

$~SplashImage, Off
SplashImage, Off

$~SplashImage [, ImageFile, Options, SubText, MainText, WinTitle, FontName]
SplashImage,$[ ImageFile],$[ Options],$[ SubText],$[ MainText],$[ WinTitle],$[ FontName]

$~SplashTextOn [, Width, Height, Title, Text]
SplashTextOn,$[ Width],$[ Height],$[ Title],$[ Text]

$~SplitPath, InputVar [, OutFileName, OutDir, OutExtension, OutNameNoExt, OutDrive]
SplitPath, $[InputVar],$[ OutFileName],$[ OutDir],$[ OutExtension],$[ OutNameNoExt],$[ OutDrive]

$~StatusBarGetText, OutputVar [, Part#, WinTitle, WinText, ExcludeTitle, ExcludeText]
StatusBarGetText, $[OutputVar],$[ Part#],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~StatusBarWait [, BarText, Seconds|Expression, Part#, WinTitle, WinText, Interval|Expression, ExcludeTitle, ExcludeText]
StatusBarWait,$[ BarText],$[ Seconds|Expression],$[ Part#],$[ WinTitle],$[ WinText],$[ Interval|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~StringCaseSense, On|Off|Locale
StringCaseSense, $[On|Off|Locale]

$~StringGetPos, OutputVar, InputVar, SearchText [, L#|R#, Offset|Exp]
StringGetPos, $[OutputVar], $[InputVar], $[SearchText],$[ L#|R#],$[ Offset|Exp]

$~StringLeft, OutputVar, InputVar, Count|Exp
StringLeft, $[OutputVar], $[InputVar], $[Count|Exp]

$~StringLen, OutputVar, InputVar
StringLen, $[OutputVar], $[InputVar]

$~StringLower, OutputVar, InputVar [, T]
StringLower, $[OutputVar], $[InputVar],$[ T]

$~StringMid, OutputVar, InputVar, StartChar|Exp [, Count|Exp, Leftwards?=L]
StringMid, $[OutputVar], $[InputVar], $[StartChar|Exp],$[ Count|Exp],$[ Leftwards?=L]

$~StringReplace, OutputVar, InputVar, SearchText [, ReplaceText, 1|A|All|UseErrorLevel]
StringReplace, $[OutputVar], $[InputVar], $[SearchText],$[ ReplaceText],$[ 1|A|All|UseErrorLevel]

$~StringRight, OutputVar, InputVar, Count|Exp
StringRight, $[OutputVar], $[InputVar], $[Count|Exp]

$~StringSplit, OutputArray, InputVar [, Delimiters, OmitChars]
StringSplit, $[OutputArray], $[InputVar],$[ Delimiters],$[ OmitChars]

$~StringTrimLeft, OutputVar, InputVar, Count|Exp
StringTrimLeft, $[OutputVar], $[InputVar], $[Count|Exp]

$~StringTrimRight, OutputVar, InputVar, Count|Exp
StringTrimRight, $[OutputVar], $[InputVar], $[Count|Exp]

$~StringUpper, OutputVar, InputVar [, T]
StringUpper, $[OutputVar], $[InputVar],$[ T]

$~Suspend [, On|Off|Toggle|Permit]
Suspend,$[ On|Off|Toggle|Permit]

$~SysGet, OutputVar, Monitor|MonitorCount|MonitorPrimary|MonitorWorkArea|MonitorName|n [, Number]
SysGet, $[OutputVar], $[Monitor|MonitorCount|MonitorPrimary|MonitorWorkArea|MonitorName|n],$[ Number]

$~Thread, NoTimers [, default=true|false]
Thread, NoTimers,$[ false]

$~Thread, Priority, Number|Expression
Thread, Priority, $[Number|Expression]

$~Thread, Interrupt [, Duration, LineCount]
Thread, Interrupt,$[ Duration],$[ LineCount]

$~Throw [, Expression
Throw,$[ Expression]

$~ToolTip [, Text, X, Y, WhichToolTip=1…20|Exp]
ToolTip,$[ Text],$[ X],$[ Y],$[ WhichToolTip=1…20|Exp]

$~Transform, OutputVar, Cmd, Value1 [, Value2]
Transform, $[OutputVar], $[Cmd], $[Value1],$[ Value2]

$~TrayTip [, Title, Text, Seconds, Options]
TrayTip,$[ Title],$[ Text],$[ Seconds],$[ Options=1|2|3|Expression]

$~Try {…}
{
${AutoComplete_Indent}$[]
}

$~Until Expression
Until $[Expression]

$~URLDownloadToFile, URL, Filename
URLDownloadToFile, $[URL], $[Filename]

$~While Expression
While $[Expression]
${AutoComplete_Indent}$[]

$~While (Expression)
While ($[Expression])
${AutoComplete_Indent}$[]

$~While Expression {…}
While $[Expression]
{
${AutoComplete_Indent}$[]
}

$~While (Expression) {…}
While ($[Expression])
{
${AutoComplete_Indent}$[]
}

$~WinActivate [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinActivate,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinActivateBottom [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinActivateBottom,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinClose [, WinTitle, WinText, SecondsToWait|Expression, ExcludeTitle, ExcludeText]
WinClose,$[ WinTitle],$[ WinText],$[ SecondsToWait|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~WinGet, OutputVar [, Cmd, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinGet, $[OutputVar],$[ Cmd],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinGetActiveStats, Title, Width, Height, X, Y
WinGetActiveStats, $[Title], $[Width], $[Height], $[X], $[Y]

$~WinGetActiveTitle, OutputVar
WinGetActiveTitle, $[OutputVar]

$~WinGetClass, OutputVar [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinGetClass, $[OutputVar],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinGetPos [, X, Y, Width, Height, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinGetPos,$[ X],$[ Y],$[ Width],$[ Height],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinGetText, OutputVar [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinGetText, $[OutputVar],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinGetTitle, OutputVar [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinGetTitle, $[OutputVar],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinHide [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinHide,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinKill [, WinTitle, WinText, SecondsToWait|Expression, ExcludeTitle, ExcludeText]
WinKill,$[ WinTitle],$[ WinText],$[ SecondsToWait|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~WinMaximize [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinMaximize,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinMenuSelectItem, WinTitle, WinText, Menu [, SubMenu1, SubMenu2, SubMenu3, SubMenu4, SubMenu5, SubMenu6, ExcludeTitle, ExcludeText]
WinMenuSelectItem, $[WinTitle], $[WinText], $[Menu],$[ SubMenu1],$[ SubMenu2],$[ SubMenu3],$[ SubMenu4],$[ SubMenu5],$[ SubMenu6],$[ ExcludeTitle],$[ ExcludeText]

$~WinMinimize [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinMinimize,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinMove, X, Y
WinMove, $[X], $[Y]

$~WinMove, WinTitle, WinText, X, Y [, Width, Height, ExcludeTitle, ExcludeText]
WinMove, $[WinTitle], $[WinText], $[X], $[Y],$[ Width],$[ Height],$[ ExcludeTitle],$[ ExcludeText]

$~WinRestore [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinRestore,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinSet, AlwaysOnTop|Bottom|Top|Disable|Enable|Redraw|ExStyle|Style [, On|Off|Toggle|0x(16x\num), WinTitle, WinText, ExcludeTitle, ExcludeText]
WinSet, $[AlwaysOnTop|Bottom|Top|Disable|Enable|Redraw|ExStyle|Style],$[ On|Off|Toggle|0x(16x\num)],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinSet, Region, Options [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinSet, Region, $[Options],$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinSet, Transparent, Off|0…255, WinTitle
WinSet, Transparent, $[Off|0…255], $[WinTitle]

$~WinSet, TransColor, Color=RRGGBB [Transparency=Off|0…255], WinTitle
WinSet, TransColor, $[Color=RRGGBB [Transparency=Off|0…255$\]], $[WinTitle]

$~WinSetTitle, NewTitle
WinSetTitle, $[NewTitle]

$~WinSetTitle, [WinTitle], [WinText], NewTitle [, ExcludeTitle, ExcludeText]
WinSetTitle,$[ WinTitle],$[ WinText], $[NewTitle],$[ ExcludeTitle],$[ ExcludeText]

$~WinShow [, WinTitle, WinText, ExcludeTitle, ExcludeText]
WinShow,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]

$~WinWait, WinTitle, WinText, Seconds|Expression [, ExcludeTitle, ExcludeText]
WinWait, $[WinTitle], $[WinText], $[Seconds|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~WinWaitActive [, WinTitle, WinText, Seconds|Expression, ExcludeTitle, ExcludeText]
WinWaitActive,$[ WinTitle],$[ WinText],$[ Seconds|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~WinWaitClose, WinTitle, WinText, Seconds|Expression [, ExcludeTitle, ExcludeText]
WinWaitClose, $[WinTitle], $[WinText], $[Seconds|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~WinWaitNotActive [, WinTitle, WinText, Seconds|Expression, ExcludeTitle, ExcludeText]
WinWaitNotActive,$[ WinTitle],$[ WinText],$[ Seconds|Expression],$[ ExcludeTitle],$[ ExcludeText]

$~If Expression
If $[Expression]
${AutoComplete_Indent}$[]

$~If (Expression)
If ($[Expression])
${AutoComplete_Indent}$[]

$~If Expression {…}
If $[Expression]
{
${AutoComplete_Indent}$[]
}

$~If (Expression) {…}
If ($[Expression])
{
${AutoComplete_Indent}$[]
}

$~IfEqual, Var, Value
IfEqual, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfEqual, Var, Value {…}
IfEqual, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfExist, File|Dir|Pattern
IfExist, $[File|Dir|Pattern]
${AutoComplete_Indent}$[]

$~IfExist, File|Dir|Pattern {…}
IfExist, $[File|Dir|Pattern]
{
${AutoComplete_Indent}$[]
}

$~IfGreater, Var, Value
IfGreater, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfGreater, Var, Value {…}
IfGreater, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfGreaterOrEqual, Var, Value
IfGreaterOrEqual, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfGreaterOrEqual, Var, Value {…}
IfGreaterOrEqual, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfInString, Var, SearchString
IfInString, $[Var], $[SearchString]
${AutoComplete_Indent}$[]

$~IfInString, Var, SearchString {…}
IfInString, $[Var], $[SearchString]
{
${AutoComplete_Indent}$[]
}

$~IfLess, Var, Value
IfLess, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfLess, Var, Value {…}
IfLess, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfLessOrEqual, Var, Value
IfLessOrEqual, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfLessOrEqual, Var, Value {…}
IfLessOrEqual, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfMsgBox, Yes|No|OK|Cancel|Abort|Ignore|Retry|Timeout
IfMsgBox, $[Yes|No|OK|Cancel|Abort|Ignore|Retry|Timeout]
${AutoComplete_Indent}$[]

$~IfMsgBox, Yes|No|OK|Cancel|Abort|Ignore|Retry|Timeout {…}
IfMsgBox, $[Yes|No|OK|Cancel|Abort|Ignore|Retry|Timeout]
{
${AutoComplete_Indent}$[]
}

$~IfNotEqual, Var, Value
IfNotEqual, $[Var], $[Value]
${AutoComplete_Indent}$[]

$~IfNotEqual, Var, Value {…}
IfNotEqual, $[Var], $[Value]
{
${AutoComplete_Indent}$[]
}

$~IfNotExist, File|Dir|Pattern
IfNotExist, $[File|Dir|Pattern]
${AutoComplete_Indent}$[]

$~IfNotExist, File|Dir|Pattern {…}
IfNotExist, $[File|Dir|Pattern]
{
${AutoComplete_Indent}$[]
}

$~IfNotInString, Var, SearchString
IfNotInString, $[Var], $[SearchString]
${AutoComplete_Indent}$[]

$~IfNotInString, Var, SearchString {…}
IfNotInString, $[Var], $[SearchString]
{
${AutoComplete_Indent}$[]
}

$~IfWinActive [, WinTitle, WinText, ExcludeTitle, ExcludeText]
IfWinActive,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
${AutoComplete_Indent}$[]

$~IfWinActive [, WinTitle, WinText, ExcludeTitle, ExcludeText] {…}
IfWinActive,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
{
${AutoComplete_Indent}$[]
}

$~IfWinExist [, WinTitle, WinText, ExcludeTitle, ExcludeText]
IfWinExist,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
${AutoComplete_Indent}$[]

$~IfWinExist [, WinTitle, WinText, ExcludeTitle, ExcludeText] {…}
IfWinExist,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
{
${AutoComplete_Indent}$[]
}

$~IfWinNotActive [, WinTitle, WinText, ExcludeTitle, ExcludeText]
IfWinNotActive,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
${AutoComplete_Indent}$[]

$~IfWinNotActive [, WinTitle, WinText, ExcludeTitle, ExcludeText] {…}
IfWinNotActive,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
{
${AutoComplete_Indent}$[]
}

$~IfWinNotExist [, WinTitle, WinText, ExcludeTitle, ExcludeText]
IfWinNotExist,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
${AutoComplete_Indent}$[]

$~IfWinNotExist [, WinTitle, WinText, ExcludeTitle, ExcludeText] {…}
IfWinNotExist,$[ WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText]
{
${AutoComplete_Indent}$[]
}

$~If Var Between Low And High
If $[Var] Between $[Low] And $[High]
${AutoComplete_Indent}$[]

$~If Var Between Low And High {…}
If $[Var] Between $[Low] And $[High]
{
${AutoComplete_Indent}$[]
}

$~If Var Not Between Low and High
If $[Var] Not Between $[Low] And $[High]
${AutoComplete_Indent}$[]

$~If Var Not Between Low and High {…}
If $[Var] Not Between $[Low] And $[High]
{
${AutoComplete_Indent}$[]
}

$~If Var Contains Value1, Value2, …
If $[Var] Contains $[Value1],$[ Value2]$[, …]
${AutoComplete_Indent}$[]

$~If Var Contains Value1, Value2, … {…}
If $[Var] Contains $[Value1],$[ Value2]$[, …]
{
${AutoComplete_Indent}$[]
}

$~If Var Not Contains Value1, Value2, …
If $[Var] Not Contains $[Value1],$[ Value2]$[, …]
${AutoComplete_Indent}$[]

$~If Var Not Contains Value1, Value2, … {…}
If $[Var] Not Contains $[Value1],$[ Value2]$[, …]
{
${AutoComplete_Indent}$[]
}

$~If Var In Value1, Value2, …
If $[Var] In $[Value1],$[ Value2]$[, …]
${AutoComplete_Indent}$[]

$~If Var In Value1, Value2, … {…}
If $[Var] In $[Value1],$[ Value2]$[, …]
{
${AutoComplete_Indent}$[]
}

$~If Var Not In Value1, Value2, …
If $[Var] Not In $[Value1],$[ Value2]$[, …]
${AutoComplete_Indent}$[]

$~If Var Not In Value1, Value2, … {…}
If $[Var] Not In $[Value1],$[ Value2]$[, …]
{
${AutoComplete_Indent}$[]
}

$~If Var Is Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time
If $[Var] Is $[Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time]
${AutoComplete_Indent}$[]

$~If Var Is Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time {…}
If $[Var] Is $[Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time]
{
${AutoComplete_Indent}$[]
}

$~If Var Is Not Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time
If $[Var] Is Not $[Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time]
${AutoComplete_Indent}$[]

$~If Var Is Not Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time {…}
If $[Var] Is Not $[Integer|Float|Number|Digit|Xdigit|Alpha|Upper|Lower|Alnum|Space|Time]
{
${AutoComplete_Indent}$[]
}

$~Else
Else
${AutoComplete_Indent}$[]

$~Else {…}
Else
{
${AutoComplete_Indent}$[]
}

$~Else If Expression
Else If $[Expression]
${AutoComplete_Indent}$[]

$~Else If (Expression)
Else If ($[Expression])
${AutoComplete_Indent}$[]

$~Else If Expression {…}
Else If $[Expression]
{
${AutoComplete_Indent}$[]
}

$~Else If (Expression) {…}
Else If ($[Expression])
{
${AutoComplete_Indent}$[]
}

$~?: ((Expression) ? (Expression) : (Expression))
(($[Expression]) ? ($[Expression]) : ($[Expression]))

$~Abs(Number)
Abs($[Number])

$~ACos(Number)
ACos($[Number])

$~ASin(Number)
ASin($[Number])

$~ATan(Number)
ATan($[Number])

$~Ceil(Number)
Ceil($[Number])

$~Chr(Number)
Chr($[Number])

$~Cos(Number)
Cos($[Number])

$~Exp(n)
Exp($[n])

$~Floor(Number)
Floor($[Number])

$~Ln(Number)
Lnv($[Number])

$~Log(Number)
Log($[Number])

$~Sin(Number)
Sin($[Number])

$~Sqrt(Number)
Sqrt($[Number])

$~Mod(Dividend, Divisor)
Mod($[Dividend],$[ Divisor])

$~Round(Number [, n])
Round($[Number],$[ n])

$~Tan(Number)
Tan($[Number])

$~Asc(String)
Asc($[String])

$~InStr(Haystack, Needle [, CaseSensitive = false, StartingPos = 1, Occurrence = 1])
InStr($[Haystack], $[Needle],$[ CaseSensitive = false],$[ StartingPos = 1],$[ Occurrence = 1])

$~RegExMatch(Haystack, NeedleRegEx [, UnquotedOutputVar = "", StartingPos = 1])
RegExMatch($[Haystack], $[NeedleRegEx],$[ UnquotedOutputVar = ""],$[ StartingPos = 1])

$~RegExReplace(Haystack, NeedleRegEx [, Replacement = "", OutputVarCount = "", Limit = -1, StartingPos = 1])
RegExReplace($[Haystack], $[NeedleRegEx],$[ Replacement = ""],$[ OutputVarCount = ""],$[ Limit = -1],$[ StartingPos = 1])

$~StrLen(String)
StrLen($[String])

$~StrGet(Address [, Length, Encoding = None])
StrGet($[Address],$[ Length],$[ Encoding = None])

$~StrPut(String [, Encoding = None])
StrPut($[String,$[ Encoding = None])

$~StrPut(String, Address [, Length, Encoding = None])
StrPut($[String], $[Address],$[ Length],$[ Encoding = None])

$~SubStr(String, StartingPos [, Length])
SubStr($[String], $[StartingPos],$[ Length])

$~Trim(String, [OmitChars = " `t"])
Trim($[String],$[ OmitChars = " `t"])

$~LTrim(String, [OmitChars = " `t"])
LTrim($[String],$[ OmitChars = " `t"])

$~RTrim(String, [OmitChars = " `t"])
RTrim($[String],$[ OmitChars = " `t"])

$~NumGet(VarOrAddress [, Offset = 0, Type = "UPtr"])
NumGet($[VarOrAddress],$[ Offset = 0],$[ Type = "UPtr"])

$~NumPut(Number, VarOrAddress [, Offset = 0, Type = "UPtr"])
NumPut($[Number], $[VarOrAddress],$[ Offset = 0],$[ Type = "UPtr"])

$~DllCall("[DllFile\\]Function" [, Type1, Arg1, Type2, Arg2, …, "Cdecl ReturnType"])
DllCall($["[DllFile\\Function"],$[ Type1],$[ Arg1],$[ Type2],$[ Arg2],$[ …],$[ "Cdecl ReturnType"])

$~Exception(Message [, What, Extra])
Exception($[Message],$[ What],$[ Extra])

$~FileExist(FilePattern)
FileExist($[FilePattern])

$~FileOpen(Filename, Flags [, Encoding])
FileOpen($[Filename], $[Flags],$[ Encoding])

$~GetKeyName(Key)
GetKeyName($[Key])

$~GetKeySC(Key)
GetKeySC($[Key])

$~GetKeyState(KeyName [, "P"|"T"])
GetKeyState($[KeyName],$[ "P"|"T"])

$~GetKeyVK(Key)
GetKeyVK($[Key])

$~IsByRef(Var)
IsByRef($[Var])

$~IsFunc(FunctionName)
IsFunc($[FunctionName])

$~IsLabel(LabelName)
IsLabel($[LabelName])

$~IsObj(Expression)
IsObj($[Expression])

$~IsObject(Expression)
IsObject($[Expression])

$~OnMessage(MsgNumber [, "FunctionName"])
OnMessage($[MsgNumber],$[ "FunctionName"])

$~RegisterCallback("FunctionName" [, Options = "", ParamCount = FormalCount, EventInfo = Address])
RegisterCallback($["FunctionName"],$[ Options = ""],$[ ParamCount = FormalCount],$[ EventInfo = Address])

$~VarSetCapacity(Var [, RequestedCapacity, FillByte])
VarSetCapacity($[Var],$[ RequestedCapacity],$[ FillByte])

$~WinActive([WinTitle, WinText, ExcludeTitle, ExcludeText])
WinActive($[WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText])

$~WinExist([WinTitle, WinText, ExcludeTitle, ExcludeText])
WinExist($[WinTitle],$[ WinText],$[ ExcludeTitle],$[ ExcludeText])

$~IL_Add(ImageListID, Filename [, IconNumber, ResizeNonIcon?])
IL_Add($[ImageListID], $[Filename],$[ IconNumber],$[ ResizeNonIcon?])

$~IL_Create([InitialCount, GrowCount, LargeIcons?])
IL_Create($[InitialCount],$[ GrowCount],$[ LargeIcons?])

$~IL_Destroy(ImageListID)
IL_Destroy($[ImageListID])

$~LV_Add([Options, Col1, Col2, …])
LV_Add($[Options],$[ Col1],$[ Col2],$[ …])

$~LV_Delete([RowNumber])
LV_Delete($[RowNumber])

$~LV_DeleteCol(ColumnNumber)
LV_DeleteCol($[ColumnNumber])

$~LV_GetCount(["Selected"|"Column"])
LV_GetCount($["Selected"|"Column"])

$~LV_GetNext([StartingRowNumber, "C"|"Check"|"Checked"|"F"|"Focused"])
LV_GetNext($[StartingRowNumber],$[ "C"|"Check"|"Checked"|"F"|"Focused"])

$~LV_GetText(OutputVar, RowNumber [, ColumnNumber])
LV_GetText($[OutputVar], $[RowNumber],$[ ColumnNumber])

$~LV_Insert(RowNumber [, Options, Col1, Col2, …])
LV_Insert($[RowNumber],$[ Options],$[ Col1],$[ Col2],$[ …])

$~LV_InsertCol(ColumnNumber [, Options, ColumnTitle])
LV_InsertCol($[ColumnNumber],$[ Options],$[ ColumnTitle])

$~LV_Modify(RowNumber, Options [, NewCol1, NewCol2, …])
LV_Modify($[RowNumber], $[Options],$[ NewCol1],$[ NewCol2],$[ …])

$~LV_ModifyCol([ColumnNumber, Options, ColumnTitle])
LV_ModifyCol($[ColumnNumber],$[ Options],$[ ColumnTitle])

$~LV_SetImageList(ImageListID [, 0|1|2])
LV_SetImageList($[ImageListID],$[ 0|1|2])

$~TV_Add(Name, [ParentItemID, Options])
TV_Add($[Name],$[ ParentItemID],$[ Options])

$~TV_Delete([ItemID])
TV_Delete($[ItemID])

$~TV_Get(ItemID, "Expand"|"Check"|"Bold")
TV_Get($[ItemID], $["Expand"|"Check"|"Bold"])

$~TV_GetChild(ParentItemID)
TV_GetChild($[ParentItemID])

$~TV_GetCount()
TV_GetCount()

$~TV_GetNext([ItemID, "C"|"Check"|"Checked"|"F"|"Full"])
TV_GetNext($[ItemID], $["C"|"Check"|"Checked"|"F"|"Full"])

$~TV_GetParent(ItemID)
TV_GetParent($[ItemID])

$~TV_GetPrev(ItemID)
TV_GetPrev($[ItemID])

$~TV_GetSelection()
TV_GetSelection()

$~TV_GetText(OutputVar, ItemID)
TV_GetText($[OutputVar], $[ItemID])

$~TV_Modify(ItemID [, Options, NewName])
TV_Modify($[ItemID],$[ Options],$[ NewName])

$~TV_SetImageList(ImageList [, 0|2])
TV_SetImageList($[ImageList],$[ 0|2])

$~SB_SetIcon(Filename [, IconNumber, PartNumber])
SB_SetIcon($[Filename],$[ IconNumber],$[ PartNumber])

$~SB_SetParts([Width1, Width2, …, Width255])
SB_SetParts($[Width1,$[ Width2],$[ …],$[ Width255])

$~SB_SetProgress()
SB_SetProgress()

$~SB_SetText(NewText [, PartNumber, Style])
SB_SetText($[NewText],$[ PartNumber],$[ Style])

$~.Read([Characters])
.Read($[Characters])

$~.Write([String])
.Write($[String])

$~.ReadLine()
.ReadLine()

$~.WriteLine([String])
.WriteLine($[String])

$~.ReadUInt()
.ReadUInt()

$~.ReadInt()
.ReadInt()

$~.ReadInt64()
.ReadInt64()

$~.ReadShort()
.ReadShort()

$~.ReadUShort()
.ReadUShort()

$~.ReadChar()
.ReadChar()

$~.ReadUChar()
.ReadUChar()

$~.ReadDouble()
.ReadDouble()

$~.ReadFloat()
.ReadFloat()

$~.WriteUInt()
.WriteUInt()

$~.WriteInt()
.WriteInt()

$~.WriteInt64()
.WriteInt64()

$~.WriteShort()
.WriteShort()

$~.WriteUShort()
.WriteUShort()

$~.WriteChar()
.WriteChar()

$~.WriteUChar()
.WriteUChar()

$~.WriteDouble()
.WriteDouble()

$~.WriteFloat()
.WriteFloat()

$~.RawRead(VarOrAddress, Bytes)
.RawRead($[VarOrAddress], $[Bytes])

$~.RawWrite(VarOrAddress, Bytes)
.RawWrite($[VarOrAddress], $[Bytes])

$~.Seek(Distance [, Origin = 0])
.Seek($[Distance],$[ Origin = 0])

$~.Tell()
.Tell()

$~.Close()
.Close()

$~__Get([params…])
__Get($[params…])

$~__Set([params…], value)
__Set($[params…],$[ value])

$~__Call([params…])
__Call($[params…])

$~__Delete()
__Delete()

$~__New([params…])
__New($[params…])

$~_NewEnum()
_NewEnum()

$~Object([Key, Value, [Key2, Value2…]])
Object($[Key],$[ Value],$[ Key2],$[ Value2…]])

$~Array([Values…])
Array($[Values…])

$~ObjInsert(Index, Value1, [, Value2, …, ValueN])
ObjInsert($[Index], $[Value1],$[ Value2],$[ …],$[ ValueN])

$~ObjInsert(Value)
ObjInsert($[Value])

$~ObjInsert(Key, Value)
ObjInsert($[Key], $[Value])

$~ObjRemove(Key)
ObjRemove($[Key])

$~ObjRemove(FirstKey, LastKey)
ObjRemove($[FirstKey], $[LastKey])

$~ObjRemove(IntKey, "")
ObjRemove($[IntKey], "$[]")

$~ObjMinIndex()
ObjMinIndex()

$~ObjMaxIndex()
ObjMaxIndex()

$~ObjSetCapacity(MaxItems)
ObjSetCapacity($[MaxItems])

$~ObjSetCapacity(Key, ByteSize)
ObjSetCapacity($[Key], $[ByteSize])

$~ObjGetCapacity([Key])
ObjGetCapacity($[Key])

$~ObjGetAddress(Key)
ObjGetAddress($[Key])

$~ObjNewEnum()
~ObjNewEnum()

$~ObjAddRef(Address)
ObjAddRef($[Address])

$~ObjRelease(Address)
ObjRelease($[Address])

$~ObjHasKey(Key)
ObjHasKey($[Key])

$~ObjClone()
ObjClone()

$~ComObjActive(ProgIdOrCLSID)
ComObjActive($[ProgIdOrCLSID])

$~ComObjArray(VarType, Count1 [, Count2, …, Count8])
ComObjArray($[VarType], $[Count1],$[ Count2],$[ …],$[ Count8])

$~ComObjConnect(ComObject [, funcPrefixOrObj])
ComObjConnect($[ComObject],$[ funcPrefixOrObj])

$~ComObjCreate(ProgIdOrCLSID [, IID])
ComObjCreate($[ProgIdOrCLSID],$[ IID])

$~ComObjEnwrap(DispPtr)
ComObjEnwrap($[DispPtr])

$~ComObjError(Enable? 1|0|true|false)
ComObjError($[Enable? 1|0|true|false])

$~ComObjFlags(ComObject [, NewFlags, Mask])
ComObjFlags($[ComObject],$[ NewFlags],$[ Mask])

$~ComObjGet(Name)
ComObjGet($[Name])

$~ComObjMissing()
ComObjMissing()

$~ComObjParameter(VarType, Value [, Flags])
ComObjParameter($[VarType], $[Value],$[ Flags])

$~ComObjQuery(ComObject, [SID,] IID)
ComObjQuery($[ComObject],$[ SID], $[IID])

$~ComObjType(ComObject[, "Name"|"IID"])
ComObjType($[ComObject],$[ "Name"|"IID"])

$~ComObjValue(ComObject)
ComObjValue($[ComObject])

$~ComObjUnwrap(ComObject)
ComObjUnwrap($[ComObject])
