;----------------------------------------------;
;           Coder plugin syntax file           ;
;----------------------------------------------;

;Colors
; Color need to be in #RRGGBB format.
; If color equal to zero, then color ignored.
;
;Font styles
; 0  ignored.
; 1  normal.
; 2  bold.
; 3  italic.
; 4  bold italic.
;
;For comfort file viewing/editing set tab size to 8 or higher.

;Smarty 3 template syntax file
;Author: Lenchik
;http://akelpad.sourceforge.net/files/plugs/Coder/smarty.coder
;https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/smarty.coder - working version
;https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/source_for_developers/smarty.utf8.coder - development version in UTF-8 for easier development on GitHub, please post your suggestions in this file
;Recomendations:
; - use XBrackets plugin

;Revision 1.7 (2013-07-11, AkelPad 4.8.4, Coder 11.3)
;Massive update. More keywords

;History:
;Revision 1.6 (2012-08-12, AkelPad 4.7.8, Coder 10.0)
;Compatibility with AkelPad 4.7.8 and Coder 10.0
;Revision 1.5 (2011-12-11, AkelPad 4.7.1, Coder 7.9)
;Compatibility with AkelPad 4.7.1 and Coder 7.9
;Revision 1.4 (2011-09-03, AkelPad 4.6.5, Coder 7.0)
;Compatibility with Smarty 3.1, new highlighting options
;Revision 1.3 (2011-03-15, AkelPad 4.5.5, Coder 5.0)
;Massive update (new keywords and AutoComplete blocks)
;Revision 1.2 (2011-02-02, AkelPad 4.5.3, Coder 4.6)
;Made comments compatible
;Revision 1.1 (2011-01-09, AkelPad 4.5.2, Coder 4.1)
;+ FoldList section
;Revision 1.0 (2011-01-04, AkelPad 4.5.2, Coder 4.0)


Files:
;==========
;File types
;==========
*.tpl

;----------------------------------------------;
;                  HighLight                   ;
;----------------------------------------------;

;Flags (sum of the members)
;     1  case sensitive.
;     2  word is a composition of characters ("Words:" section only). Example: "0123456789" - highlight words that contain only digits.
;     4  quote end required ("Quotes:" section only).
;     8  quote start string is ignored and last meet delimiter used as quote start ("Quotes:" section only).
;    16  quote end string is ignored and first meet delimiter used as quote end ("Quotes:" section only).
;    32  don't highlight quote start ("Quotes:" section only).
;    64  don't highlight quote end ("Quotes:" section only).
;   128  don't catch and don't highlight quote start ("Quotes:" section only).
;   256  don't catch and don't highlight quote end ("Quotes:" section only).
;   512  quote start, delimiter or word located at line start.
;  1024  quote end, delimiter or word located at line end.
;  2048  quote start is surrounded with delimiters ("Quotes:" section only).
;  4096  quote end is surrounded with delimiters ("Quotes:" section only).
;  8192  quote doesn't contain delimiters ("Quotes:" section only).
; 16384  only quote start string is catched ("Quotes:" section only).
; 32768  quote doesn't contain any character ("Quotes:" section only).


Font:
;=================================================================
;FontStyle             FontSize              FaceName
;=================================================================
${HighLight_FontStyle} ${HighLight_FontSize} ${HighLight_FaceName}


Colors:
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
;BasicTextColor             BasicBkColor              SelTextColor              SelBkColor              LineTextColor              LineBkColor              LineBorderColor              AltTextColor              AltBkColor              AltBorderColor              ColumnColor              MarkerColor              CaretColor              UrlColor              ActiveUrlColor              VisitUrlColor
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
${HighLight_BasicTextColor} ${HighLight_BasicBkColor} ${HighLight_SelTextColor} ${HighLight_SelBkColor} ${HighLight_LineTextColor} ${HighLight_LineBkColor} ${HighLight_LineBorderColor} ${HighLight_AltTextColor} ${HighLight_AltBkColor} ${HighLight_AltBorderColor} ${HighLight_ColumnColor} ${HighLight_MarkerColor} ${HighLight_CaretColor} ${HighLight_UrlColor} ${HighLight_ActiveUrlColor} ${HighLight_VisitUrlColor}


BkImage:
;==================================================
;BkImageFile              BkImageAlpha
;==================================================
${HighLight_BkImageFile}  ${HighLight_BkImageAlpha}


AutoMark:
;====================================================================================================================
;AutoMarkFlags             AutoMarkFontStyle              AutoMarkTextColor              AutoMarkBkColor
;====================================================================================================================
${HighLight_AutoMarkFlags} ${HighLight_AutoMarkFontStyle} ${HighLight_AutoMarkTextColor} ${HighLight_AutoMarkBkColor}


Quotes:
;======================================================================
;Flags  Font    Color   Color   Quote   Quote   Escape  Quote   Quote
;       style   text    bkgrnd  start   end     char    include exclude
;======================================================================
;Strings without delimiters (spaces, variables signs, smarty tags etc.)
;8197=1+4+8192
8197	3	${STR}	0	`"`	`"`	"\"	""	""
;Catch strings with spaces and no variables
;5=1+4
5	3	${STR}	0	`"`	`"`	" "	""	"${}="
;All other string suppose to contain variables
;5=1+4
;5	4	${STR}	0	`"`	`"`	""	""	""
;5=1+4
;5	2	0	0	`{`	`}`	""	""	""
;5=1+4
5	3	${STR}	0	"'"	"'"	""	""	""
;5=1+4
;5	3	${STR}	0	"`"	"`"	""	""	""
;Against html coloring
;389=1+4+128+256
389	0	${HighLight_BasicTextColor}	0	"</"	">"	""	""	""
;5=1+4
389	0	${HighLight_BasicTextColor}	0	`<`	`{`	""	""	""
389	0	${HighLight_BasicTextColor}	0	`}`	`>`	""	""	""
389	0	${HighLight_BasicTextColor}	0	`}`	`{`	""	""	""
;401=1+16+128+256
401	0	${HighLight_BasicTextColor}	0	"<"	""	" "	""	""
;5=1+4
5	3	${DEL2}	0	"<!--"	"-->"	""	""	""
;5=1+4
5	3	${COMM}	0	"{*"	"*}"	""	""	""
;Config variables
;8197=1+4+8192
8197	0	${TYPE}	0	"#"	"#"	""	""	`"`
;5=1+4
5	4	${DEL1}	0	"{literal}"	"{/literal}"	""	""	""
;Different variables
;273=1+16+256
273	2	${VAR}	0	"$"	""	""	""	"!=, &;"
;273=1+16+256
401	2	${VAR}	0	"}."	""	""	""	"=, &;!"
;273=1+16+256
401	2	${VAR}	0	"]."	""	""	""	"=, &;"
;385=1+128+256
;385	0	${VAR}	0	"$"	""	""	""	""
;405=1+4+16+128+256
;405	0	${STR}	0	"="	""	""	""	""
;Specific keyword usage
;273=1+16+256
;5	1	${OP}	0	"{eval"	"}"	""	""	""
;5	1	${OP}	0	"{fetch"	"}"	""	""	""
;5	1	${OP}	0	"{html_checkboxes"	"}"	""	""	""
;5	1	${OP}	0	"{html_image"	"}"	""	""	""
;5	1	${OP}	0	"{html_options"	"}"	""	""	""
;5	1	${OP}	0	"{html_radios"	"}"	""	""	""
;5	1	${OP}	0	"{html_select_date"	"}"	""	""	""
;5	1	${OP}	0	"{html_select_time"	"}"	""	""	""
;5	1	${OP}	0	"{html_table"	"}"	""	""	""
;5	1	${OP}	0	"{mailto"	"}"	""	""	""
;5	1	${OP}	0	"{math"	"}"	""	""	""
;Attributes and modifiers with names same to functions:
;133=1+4+128
133	0	${ATTR}	0	"|"	"strip_tags"	""	""	""
133	0	${ATTR}	0	"|"	"strip"	""	""	""
;133=1+4+128
133	0	${ATTR}	0	" "	"append"	""	""	""
69	0	${ATTR}	0	" assign"	"="	""	""	""
133	0	${ATTR}	0	" "	"nocache"	""	""	""
69	0	${ATTR}	0	" section"	"="	""	""	""
;Deprecated functions
;5=1+4
5	3	${HighLight_BasicTextColor}	0	"{insert"	"}"	""	""	""
5	3	${HighLight_BasicTextColor}	0	"{include_php"	"}"	""	""	""

QuotesRE:
;=========================================================================================
;Flags  Pattern                        \BackRef=(FontStyle,ColorText,ColorBk) \BackRef=...
;=========================================================================================
;0	`(")([^"\\]*(\\.[^"\\]*)*)(")` `\1=(0,${DEL1},0) \2=(3,${STR},0) \4=(0,${DEL1},0)`


Delimiters:
;======================================
;Flags  Font    Color   Color   Char(s)
;       style   text    bkgrnd
;======================================
1	0	0	0	`"`
1	0	0	0	" "
1	0	0	0	"	"
;1	0	${VAR}	0	$
1	0	${DEL1}	0	(
1	0	${DEL1}	0	)
1	0	${DEL1}	0	{
1	0	${DEL1}	0	}
1	0	${DEL1}	0	/
1	0	${DEL2}	0	=
1	0	${DEL2}	0	!
;1	0	0	0	.
1	0	0	0	-
1	0	${DEL2}	0	<
1	0	${DEL2}	0	>
1	0	${DEL2}	0	@
1	0	${DEL2}	0	|
1	0	${DEL2}	0	:


Words:
;===================================
;Flags  Font    Color   Color   Word
;       style   text    bkgrnd
;===================================
;Numerical
;3=1+2
3	0	${NUM}	0	"0123456789"
;--Conditional--
1	0	${IF}	0	if
1	0	${IF}	0	else
1	0	${IF}	0	elseif
1	0	${IF}	0	for
1	0	${IF}	0	forelse
1	0	${IF}	0	in
1	0	${IF}	0	foreach
1	0	${IF}	0	as
1	0	${IF}	0	foreachelse
1	0	${IF}	0	while
;--Logical--
1	2	${OP}	0	true
1	2	${OP}	0	false
;--Scopes--
1	0	${TYPE}	0	local
1	0	${TYPE}	0	parent
1	0	${TYPE}	0	global
1	0	${TYPE}	0	root
;--Keywords--
1	0	${OP}	0	function
1	0	${OP}	0	ldelim
1	0	${OP}	0	rdelim
1	0	${OP}	0	section
1	0	${OP}	0	sectionelse
1	0	${OP}	0	setfilter
1	0	${OP}	0	include
1	0	${OP}	0	assign
1	0	${OP}	0	append
1	0	${OP}	0	strip
;
1	0	${OP}	0	empty
;
1	0	${OP}	0	from
1	0	${OP}	0	item
1	0	${OP}	0	key
;;;1	0	${OP}	0	values
;
1	0	${ATTR}	0	nofilter
1	0	${OP}	0	call
1	0	${OP}	0	debug
1	0	${OP}	0	config_load
1	0	${OP}	0	nocache
1	0	${IF}	0	step
1	0	${IF}	0	max
1	0	${IF}	0	to
;
1	2	${OP}	0	break
1	2	${OP}	0	continue
1	0	${OP}	0	capture
1	0	${AREA}	0	block
1	0	${AREA}	0	extends
;custom functions
1	0	${OP}	0	counter
1	0	${OP}	0	cycle
1	0	${OP}	0	eval
1	0	${OP}	0	fetch
1	0	${OP}	0	html_checkboxes
1	0	${OP}	0	html_image
1	0	${OP}	0	html_options
1	0	${OP}	0	html_radios
1	0	${OP}	0	html_select_date
1	0	${OP}	0	html_select_time
1	0	${OP}	0	html_table
1	0	${OP}	0	mailto
1	0	${OP}	0	math
1	0	${AREA}	0	textformat
;Deprecated functions
;1	0	${OP}	0	include_php
;1	0	${OP}	0	insert
;1	0	${OP}	0	php
; {foreach} properties
1	0	${ATTR}	0	index
1	0	${ATTR}	0	iteration
1	0	${ATTR}	0	first
1	0	${ATTR}	0	last
1	0	${ATTR}	0	show
1	0	${ATTR}	0	total
;{section} properties
;1	0	${ATTR}	0	index_prev
;1	0	${ATTR}	0	index_next
; variable modifiers
1	0	${ATTR}	0	capitalize
1	0	${ATTR}	0	cat
1	0	${ATTR}	0	count_characters
1	0	${ATTR}	0	count_paragraphs
1	0	${ATTR}	0	count_sentences
1	0	${ATTR}	0	count_words
1	0	${ATTR}	0	date_format
1	0	${ATTR}	0	default
1	0	${ATTR}	0	escape
1	0	${ATTR}	0	indent
1	0	${ATTR}	0	lower
1	0	${ATTR}	0	nl2br
1	0	${ATTR}	0	regex_replace
1	0	${ATTR}	0	replace
1	0	${ATTR}	0	spacify
1	0	${ATTR}	0	string_format
1	0	${ATTR}	0	strip_tags
1	0	${ATTR}	0	truncate
1	0	${ATTR}	0	upper
1	0	${ATTR}	0	wordwrap
;--Expression Operators--
0	0	${IF}	0	eq
0	0	${IF}	0	ne
0	0	${IF}	0	neq
0	0	${IF}	0	gt
0	0	${IF}	0	lt
0	0	${IF}	0	gte
0	0	${IF}	0	ge
0	0	${IF}	0	lte
0	0	${IF}	0	le
0	0	${IF}	0	not
0	0	${IF}	0	or
0	0	${IF}	0	and
0	0	${OP}	0	mod
;{append} attributes
1	0	${ATTR}	0	var
1	0	${ATTR}	0	value
1	0	${ATTR}	0	scope
;{include} attributes and options
1	0	${ATTR}	0	cache_lifetime
1	0	${ATTR}	0	compile_id
1	0	${ATTR}	0	cache_id
1	0	${ATTR}	0	caching
1	0	${ATTR}	0	inline
;{include_php} attributes
;1	0	${ATTR}	0	once
;{insert} attributes
;1	0	${ATTR}	0	script
;{block} attributes
1	0	${ATTR}	0	hide
1	0	${ATTR}	0	prepend
;{counter} attributes
1	0	${ATTR}	0	name
1	0	${ATTR}	0	start
1	0	${ATTR}	0	skip
1	0	${ATTR}	0	direction
1	0	${ATTR}	0	print
;{cycle} attributes
1	0	${ATTR}	0	values
1	0	${ATTR}	0	advance
1	0	${ATTR}	0	delimiter
1	0	${ATTR}	0	reset
;{fetch} attributes
1	0	${ATTR}	0	file
;{html_checkboxes} attributes
1	0	${ATTR}	0	output
1	0	${ATTR}	0	selected
1	0	${ATTR}	0	options
1	0	${ATTR}	0	separator
1	0	${ATTR}	0	labels
1	0	${ATTR}	0	label_ids
;;;1	0	${ATTR}	0	escape
1	0	${ATTR}	0	strict
;{html_image} attributes
1	0	${ATTR}	0	height
1	0	${ATTR}	0	width
1	0	${ATTR}	0	basedir
1	0	${ATTR}	0	alt
1	0	${ATTR}	0	href
1	0	${ATTR}	0	path_prefix
;{html_select_date} attributes
1	0	${ATTR}	0	prefix
1	0	${ATTR}	0	time
1	0	${ATTR}	0	start_year
1	0	${ATTR}	0	end_year
1	0	${ATTR}	0	display_days
1	0	${ATTR}	0	display_months
1	0	${ATTR}	0	display_years
1	0	${ATTR}	0	month_names
1	0	${ATTR}	0	month_format
1	0	${ATTR}	0	day_format
1	0	${ATTR}	0	day_value_format
1	0	${ATTR}	0	year_as_text
1	0	${ATTR}	0	reverse_years
1	0	${ATTR}	0	field_array
1	0	${ATTR}	0	day_size
1	0	${ATTR}	0	month_size
1	0	${ATTR}	0	year_size
1	0	${ATTR}	0	all_extra
1	0	${ATTR}	0	day_extra
1	0	${ATTR}	0	month_extra
1	0	${ATTR}	0	year_extra
1	0	${ATTR}	0	all_id
1	0	${ATTR}	0	day_id
1	0	${ATTR}	0	month_id
1	0	${ATTR}	0	year_id	string
1	0	${ATTR}	0	field_order
1	0	${ATTR}	0	field_separator
1	0	${ATTR}	0	month_value_format
1	0	${ATTR}	0	all_empty
1	0	${ATTR}	0	year_empty
1	0	${ATTR}	0	month_empty
1	0	${ATTR}	0	day_empty
;{html_select_time} attributes
1	0	${ATTR}	0	display_hours
1	0	${ATTR}	0	display_minutes
1	0	${ATTR}	0	display_seconds
1	0	${ATTR}	0	display_meridian
1	0	${ATTR}	0	use_24_hours
1	0	${ATTR}	0	minute_interval
1	0	${ATTR}	0	second_interval
1	0	${ATTR}	0	hour_format
1	0	${ATTR}	0	hour_value_format
1	0	${ATTR}	0	minute_format
1	0	${ATTR}	0	minute_value_format
1	0	${ATTR}	0	second_format
1	0	${ATTR}	0	second_value_format
1	0	${ATTR}	0	hour_extr
1	0	${ATTR}	0	minute_extra
1	0	${ATTR}	0	second_extra
1	0	${ATTR}	0	meridian_extra
1	0	${ATTR}	0	option_separator
1	0	${ATTR}	0	hour_id
1	0	${ATTR}	0	minute_id
1	0	${ATTR}	0	second_id
1	0	${ATTR}	0	meridian_id
1	0	${ATTR}	0	hour_empty
1	0	${ATTR}	0	minute_empty
1	0	${ATTR}	0	second_empty
1	0	${ATTR}	0	meridian_empty
;{html_table} attributes
1	0	${ATTR}	0	loop
1	0	${ATTR}	0	cols
1	0	${ATTR}	0	rows
1	0	${ATTR}	0	inner
1	0	${ATTR}	0	caption
1	0	${ATTR}	0	table_attr
1	0	${ATTR}	0	th_attr
1	0	${ATTR}	0	tr_attr
1	0	${ATTR}	0	td_attr
1	0	${ATTR}	0	trailpad
1	0	${ATTR}	0	hdir
1	0	${ATTR}	0	vdir
;{mailto} attributes
1	0	${ATTR}	0	address
1	0	${ATTR}	0	text
1	0	${ATTR}	0	encode
1	0	${ATTR}	0	cc
1	0	${ATTR}	0	bcc
1	0	${ATTR}	0	subject
1	0	${ATTR}	0	newsgroups
1	0	${ATTR}	0	followupto
1	0	${ATTR}	0	extra
;{math} attributes
1	0	${ATTR}	0	equation
1	0	${ATTR}	0	format
;{textformat} attributes
1	0	${ATTR}	0	style
;;;1	0	${ATTR}	0	indent
1	0	${ATTR}	0	indent_first
1	0	${ATTR}	0	indent_char
1	0	${ATTR}	0	wrap
1	0	${ATTR}	0	wrap_char
1	0	${ATTR}	0	wrap_cut


;----------------------------------------------;
;                   CodeFold                   ;
;----------------------------------------------;

;Flags (sum of the members)
;      1  case sensitive.
;      2  force get fold name for function list from left at the fold start ("Folds:" section only).
;      4  force get fold name for function list from right at the fold start, including fold start ("Folds:" section only).
;      8  fold start located at line start ("Folds:" section only).
;     16  fold start located at line end ("Folds:" section only).
;     32  fold end located at line start ("Folds:" section only).
;     64  fold end located at line end ("Folds:" section only).
;    128  don't catch fold end ("Folds:" section) or skip end ("Skips:" section).
;    256  additional to 128 flag - more priority is given to sibling level instead of parent level ("Folds:" section only).
;    512  comment fold - fold ignore any other folds and skips inside ("Folds:" section only).
;   1024  reserved.
;   2048  deny fold - founded fold will be ignored ("Folds:" section only).
;   4096  xml fold - "<tag" and "</tag>", "<single" and "/>", "<single" and ">" ("Folds:" section only).
;   8192  don't check delimiters from left of fold start ("Folds:" section only).
;  16384  don't check delimiters from right of fold start ("Folds:" section only).
;  32768  don't check delimiters from left of fold end ("Folds:" section only).
;  65536  don't check delimiters from right of fold end ("Folds:" section only).
; 131072  deny delimiters ("Folds:" section only).
; 262144  don't show fold in list ("Folds:" section only).


FoldPanel:
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;PanelFirstBkColor            PanelSecondBkColor             PanelNormalFoldColor             PanelActiveFoldColor             PanelNormalNodeOpenBkColor             PanelNormalNodeCloseBkColor             PanelActiveNodeOpenBkColor             PanelActiveNodeCloseBkColor             PanelNormalNodeOpenSignColor             PanelNormalNodeCloseSignColor             PanelActiveNodeOpenSignColor             PanelActiveNodeCloseSignColor
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${CodeFold_PanelFirstBkColor} ${CodeFold_PanelSecondBkColor} ${CodeFold_PanelNormalFoldColor} ${CodeFold_PanelActiveFoldColor} ${CodeFold_PanelNormalNodeOpenBkColor} ${CodeFold_PanelNormalNodeCloseBkColor} ${CodeFold_PanelActiveNodeOpenBkColor} ${CodeFold_PanelActiveNodeCloseBkColor} ${CodeFold_PanelNormalNodeOpenSignColor} ${CodeFold_PanelNormalNodeCloseSignColor} ${CodeFold_PanelActiveNodeOpenSignColor} ${CodeFold_PanelActiveNodeCloseSignColor}


FoldList:
;================================================
;ListTextColor            ListBkColor
;================================================
${CodeFold_ListTextColor} ${CodeFold_ListBkColor}


TagMark:
;============================================================================================================
;TagMarkFlags            TagMarkFontStyle             TagMarkTextColor             TagMarkBkColor
;============================================================================================================
${CodeFold_TagMarkFlags} ${CodeFold_TagMarkFontStyle} ${CodeFold_TagMarkTextColor} ${CodeFold_TagMarkBkColor}


Skips:
;=============================
;Flags  Skip    Skip    Escape
;       start   end     char
;=============================
1	`"`	`"`	""
1	"'"	"'"	""
;1	"//"	""	":"


Folds:
;=============================================================
;Flags  Font    Color   Color   Fold       Fold      Delimiters
;       style   text    bkgrnd  start      end
;=============================================================
;Comments
;513=1+512
513	3	${DEL2}	0	"<!--"	"-->"	""
;513=1+512
513	3	${COMM}	0	"{*"	"*}"	""
;5=1+4
5	0	0	0	"{block "	"{/block}"	""
;1=1
1	0	0	0	"{foreach "	"{/foreach}"	""
;5=1+4
5	0	0	0	"{function "	"{/function}"	""
;1=1
1	0	0	0	"{if "	"{/if}"	""
;385=1+128+256
385	0	0	0	"{if "	"{elseif "	""
;385=1+128+256
385	0	0	0	"{if "	"{else}"	""
;1=1
1	0	0	0	"{elseif "	"{/if}"	""
;385=1+128+256
385	0	0	0	"{elseif "	"{elseif "	""
;385=1+128+256
385	0	0	0	"{elseif "	"{else}"	""
;1=1
1	0	0	0	"{else}"	"{/if}"	""
;5=1+4
5	0	0	0	"{setfilter "	"{/setfilter}"	""
;1=1
1	0	0	0	"{strip}"	"{/strip}"	""
;1=1
1	0	0	0	"{textformat "	"{/textformat}"	""
;1=1
1	0	0	0	"{while "	"{/while}"	""
;Multiline Quotes
;475137=1+16384+65536+131072+262144 
;475137	3	${STR}	0	`"`	`"`	"\"
;Deprecated Blocks
;475137=1+16384+65536+131072+262144 
475649	3	${HighLight_BasicTextColor}	0	"{php}"	"{/php}"	"\"

;----------------------------------------------;
;                 AutoComplete                 ;
;----------------------------------------------;

Blocks:
;======================================================================
;Abbreviations and blocks
;
; $~abbr   normal abbreviation.
; $=abbr   exact abbreviation. May contain delimiters.
; $[]      set caret to this position. Can be multiple (hot spots).
; $[text]  select text. Can be multiple (hot spots).
; $$       symbol $.
; $\]      escape symbol ]. Can be used in $[text] block: $[One [1$\] ].
; ${VAR}   variable assigned from Coder::Settings.
; $;       comment line.
;======================================================================
; XBrackets assumed to be working. That is why there will be no beginning and ending curly braces '{}' inside autocomplete blocks descriptions 

$~comment {* *}
{*$[]*}

$~append
append $[] $[] index=$[]

$~assign
assign $[] $[]

$~block
block $[]}$[]{/block$[]

$~call
call $[] $[]

$~capture
capture $[]}$[]{/capture$[]

$~config_load
config_load $[]

$~extends
extends $[]

$~file=
file=$[]

$~for $var=$start to $end
for $[]=$[] to $[]}
${AutoComplete_Indent}$[]
{/for

$~for $var=$start to $end step $step
for $[]=$[] to $[] step $[]}
${AutoComplete_Indent}$[]
{/for

$~for + forelse
for $[]=$[] to $[]}
${AutoComplete_Indent}$[]
{forelse}
${AutoComplete_Indent}$[]
{/for

$~foreach
foreach $[] as $[]}
${AutoComplete_Indent}$[]
{/foreach

$~index=
index=$[]

$~max=
max=$[]

$~name=
name=$[]

$~section=
section=$[]

$~value=
value=$[]

$~var=
var=$[]
