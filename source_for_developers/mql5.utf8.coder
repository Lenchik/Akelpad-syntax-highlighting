;----------------------------------------------;
;           Coder plugin syntax file           ;
;----------------------------------------------;

;Colors
; Color need to be in #RRGGBB or #RGB format.
; If color equal to zero, then color ignored.
;
;Font styles
; 0  ignored.
; 1  normal.
; 2  bold.
; 3  italic.
; 4  bold italic.
;
;For comfort file viewing/editing set tab size to 8.

;Author: Skif_off (2019-07-01)
;Based on cpp.coder
;AkelPad 4.9.6 and higher
;https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/mql5.coder - working version
;https://github.com/Lenchik/Akelpad-syntax-highlighting/blob/master/source_for_developers/mql5.utf8.coder - development version in UTF-8 for easier development on GitHub
;MetaQuotes Language 5 (MQL5)


Files:
;==========
;File types
;==========
*.mq5


;----------------------------------------------;
;                  HighLight                   ;
;----------------------------------------------;

;Flags (sum of the members)
;     1  case sensitive.
;     2  word is a composition of characters ("Words:" section only). Example: "0123456789" - highlight words that contain only digits.
;     4  quote end required ("Quotes:" section only).
;     8  quote start string is ignored and last meet delimiter used as quote start ("Quotes:" section only).
;    16  quote end string is ignored and first meet delimiter used as quote end ("Quotes:" section only).
;    32  don't highlight quote start ("Quotes:" section only).
;    64  don't highlight quote end ("Quotes:" section only).
;   128  don't catch and don't highlight quote start ("Quotes:" section only).
;   256  don't catch and don't highlight quote end ("Quotes:" section only).
;   512  quote start, delimiter or word located at line start.
;  1024  quote end, delimiter or word located at line end.
;  2048  quote start is surrounded with delimiters ("Quotes:" section only).
;  4096  quote end is surrounded with delimiters ("Quotes:" section only).
;  8192  quote doesn't contain delimiters ("Quotes:" section only).
; 16384  only quote start string is catched ("Quotes:" section only).
; 32768  quote doesn't contain any character ("Quotes:" section only).


Font:
;=================================================================
;FontStyle             FontSize              FaceName
;=================================================================
${HighLight_FontStyle} ${HighLight_FontSize} ${HighLight_FaceName}


Colors:
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
;BasicTextColor             BasicBkColor              SelTextColor              SelBkColor              LineTextColor              LineBkColor              LineBorderColor              AltTextColor              AltBkColor              AltBorderColor              ColumnColor              MarkerColor              CaretColor              UrlColor              ActiveUrlColor              VisitUrlColor
;=============================================================================================================================================================================================================================================================================================================================================================================================================================
${HighLight_BasicTextColor} ${HighLight_BasicBkColor} ${HighLight_SelTextColor} ${HighLight_SelBkColor} ${HighLight_LineTextColor} ${HighLight_LineBkColor} ${HighLight_LineBorderColor} ${HighLight_AltTextColor} ${HighLight_AltBkColor} ${HighLight_AltBorderColor} ${HighLight_ColumnColor} ${HighLight_MarkerColor} ${HighLight_CaretColor} ${HighLight_UrlColor} ${HighLight_ActiveUrlColor} ${HighLight_VisitUrlColor}


BkImage:
;==================================================
;BkImageFile              BkImageAlpha
;==================================================
${HighLight_BkImageFile}  ${HighLight_BkImageAlpha}


AutoMark:
;====================================================================================================================
;AutoMarkFlags             AutoMarkFontStyle              AutoMarkTextColor              AutoMarkBkColor
;====================================================================================================================
${HighLight_AutoMarkFlags} ${HighLight_AutoMarkFontStyle} ${HighLight_AutoMarkTextColor} ${HighLight_AutoMarkBkColor}


Quotes:
;===================================================================================
;Flags  Font    Color   Color   Quote   Quote   Escape  Quote   Quote   Parent  Rule
;       style   text    bkgrnd  start   end     char    include exclude ID      ID
;===================================================================================
;5=1+4
5	3	${STR}	0	`"`	`"`	"\"	""	""	0	0
;5=1+4
5	3	${STR}	0	"'"	"'"	"\"	""	""	0	0
;1=1
1	3	${COMM}	0	"//"	""	":"	""	""	0	0
;5=1+4
5	3	${COMM}	0	"/*"	"*/"	""	""	""	0	0


QuotesRE:
;===========================================================================================
;Flags  Pattern         \BackRef=(FontStyle,ColorText,ColorBk) \BackRef=...  ParentID RuleID
;===========================================================================================
;0	`(")([^"\\]*(\\.[^"\\]*)*)(")` `\1=(0,${DEL1},0) \2=(3,${STR},0) \4=(0,${DEL1},0)`  0        0


Delimiters:
;===============================================
;Flags  Font    Color   Color   Char(s)   Parent
;       style   text    bkgrnd            ID
;===============================================
1	0	0	0	" "
1	0	0	0	"	"
1	0	${DEL1}	0	(
1	0	${DEL1}	0	)
1	0	${DEL2}	0	{
1	0	${DEL2}	0	}
1	0	${DEL2}	0	.
1	0	${DEL2}	0	,
1	0	${DEL2}	0	:
1	0	${DEL2}	0	;
1	0	${DEL2}	0	!
1	0	${DEL2}	0	~
1	0	${DEL2}	0	|
1	0	${DEL2}	0	=
1	0	${DEL2}	0	-
1	0	${DEL2}	0	*
1	0	${DEL2}	0	+
1	0	${DEL2}	0	/
1	0	${DEL2}	0	<
1	0	${DEL2}	0	>
1	0	${DEL2}	0	&
1	0	${DEL2}	0	^
1	0	${DEL2}	0	%
1	0	${DEL2}	0	?
1	0	${DEL2}	0	[
1	0	${DEL2}	0	]


Words:
;===========================================
;Flags  Font    Color   Color   Word  Parent
;       style   text    bkgrnd        ID
;===========================================
;Data Types
1	0	${TYPE}	0	bool
1	0	${TYPE}	0	char
1	0	${TYPE}	0	class
1	0	${TYPE}	0	color
1	0	${TYPE}	0	datetime
1	0	${TYPE}	0	double
1	0	${TYPE}	0	enum
1	0	${TYPE}	0	float
1	0	${TYPE}	0	int
1	0	${TYPE}	0	long
1	0	${TYPE}	0	short
1	0	${TYPE}	0	string
1	0	${TYPE}	0	struct
1	0	${TYPE}	0	uchar
1	0	${TYPE}	0	uint
1	0	${TYPE}	0	ulong
1	0	${TYPE}	0	ushort
1	0	${TYPE}	0	void
1	0	${TYPE}	0	interface
1	0	${TYPE}	0	union
;Access Specificators
1	0	${OP}	0	const
1	0	${OP}	0	private
1	0	${OP}	0	protected
1	0	${OP}	0	public
1	0	${OP}	0	virtual
;Memory Classes
1	0	${OP}	0	extern
1	0	${OP}	0	input
1	0	${OP}	0	sinput
1	0	${OP}	0	static
;Operators
1	0	${IF}	0	break
1	0	${IF}	0	case
1	0	${IF}	0	continue
1	0	${IF}	0	default
1	0	${IF}	0	delete
1	0	${IF}	0	do
1	0	${IF}	0	dynamic_cast
1	0	${IF}	0	else
1	0	${IF}	0	for
1	0	${IF}	0	if
1	0	${IF}	0	new
1	0	${IF}	0	operator
1	0	${IF}	0	return
1	0	${IF}	0	sizeof
1	0	${IF}	0	switch
1	0	${IF}	0	while
;Other
1	0	${IF}	0	#define
1	0	${IF}	0	#else
1	0	${IF}	0	#endif
1	0	${IF}	0	#ifdef
1	0	${IF}	0	#ifndef
1	0	${IF}	0	#import
1	0	${IF}	0	#include
1	0	${IF}	0	#property
1	0	${IF}	0	#undef
1	0	${IF}	0	export
1	0	${IF}	0	false
1	0	${IF}	0	NULL
1	0	${IF}	0	template
1	0	${IF}	0	this
1	0	${IF}	0	true
1	0	${IF}	0	typedef
1	0	${IF}	0	typename
;Predefined variables
1	0	${VAR}	0	_AppliedTo
1	0	${VAR}	0	_Digits
1	0	${VAR}	0	_IsX64
1	0	${VAR}	0	_LastError
1	0	${VAR}	0	_Period
1	0	${VAR}	0	_Point
1	0	${VAR}	0	_RandomSeed
1	0	${VAR}	0	_StopFlag
1	0	${VAR}	0	_Symbol
1	0	${VAR}	0	_UninitReason
;Functions
;Common Functions
1	0	${OP}	0	Alert
1	0	${OP}	0	CheckPointer
1	0	${OP}	0	Comment
1	0	${OP}	0	CryptDecode
1	0	${OP}	0	CryptEncode
1	0	${OP}	0	DebugBreak
1	0	${OP}	0	ExpertRemove
1	0	${OP}	0	GetMicrosecondCount
1	0	${OP}	0	GetPointer
1	0	${OP}	0	GetTickCount
1	0	${OP}	0	MessageBox
1	0	${OP}	0	PeriodSeconds
1	0	${OP}	0	PlaySound
1	0	${OP}	0	Print
1	0	${OP}	0	PrintFormat
1	0	${OP}	0	ResetLastError
1	0	${OP}	0	ResourceCreate
1	0	${OP}	0	ResourceFree
1	0	${OP}	0	ResourceReadImage
1	0	${OP}	0	ResourceSave
1	0	${OP}	0	SetReturnError
1	0	${OP}	0	SetUserError
1	0	${OP}	0	Sleep
1	0	${OP}	0	TerminalClose
1	0	${OP}	0	TesterDeposit
1	0	${OP}	0	TesterHideIndicators
1	0	${OP}	0	TesterStatistics
1	0	${OP}	0	TesterStop
1	0	${OP}	0	TesterWithdrawal
1	0	${OP}	0	TranslateKey
1	0	${OP}	0	ZeroMemory
;Array Functions
1	0	${OP}	0	ArrayBsearch
1	0	${OP}	0	ArrayCompare
1	0	${OP}	0	ArrayCopy
1	0	${OP}	0	ArrayFill
1	0	${OP}	0	ArrayFree
1	0	${OP}	0	ArrayGetAsSeries
1	0	${OP}	0	ArrayInitialize
1	0	${OP}	0	ArrayInsert
1	0	${OP}	0	ArrayIsDynamic
1	0	${OP}	0	ArrayIsSeries
1	0	${OP}	0	ArrayMaximum
1	0	${OP}	0	ArrayMinimum
1	0	${OP}	0	ArrayPrint
1	0	${OP}	0	ArrayRange
1	0	${OP}	0	ArrayRemove
1	0	${OP}	0	ArrayResize
1	0	${OP}	0	ArrayReverse
1	0	${OP}	0	ArraySetAsSeries
1	0	${OP}	0	ArraySize
1	0	${OP}	0	ArraySort
1	0	${OP}	0	ArraySwap
;Conversion Functions
1	0	${OP}	0	CharArrayToString
1	0	${OP}	0	CharArrayToStruct
1	0	${OP}	0	CharToString
1	0	${OP}	0	ColorToARGB
1	0	${OP}	0	ColorToString
1	0	${OP}	0	DoubleToString
1	0	${OP}	0	EnumToString
1	0	${OP}	0	IntegerToString
1	0	${OP}	0	NormalizeDouble
1	0	${OP}	0	ShortArrayToString
1	0	${OP}	0	ShortToString
1	0	${OP}	0	StringFormat
1	0	${OP}	0	StringToCharArray
1	0	${OP}	0	StringToColor
1	0	${OP}	0	StringToDouble
1	0	${OP}	0	StringToInteger
1	0	${OP}	0	StringToShortArray
1	0	${OP}	0	StringToTime
1	0	${OP}	0	StructToCharArray
1	0	${OP}	0	TimeToString
;Math Functions
1	0	${OP}	0	MathAbs
1	0	${OP}	0	MathArccos
1	0	${OP}	0	MathArccosh
1	0	${OP}	0	MathArcsin
1	0	${OP}	0	MathArcsinh
1	0	${OP}	0	MathArctan
1	0	${OP}	0	MathArctanh
1	0	${OP}	0	MathCeil
1	0	${OP}	0	MathCos
1	0	${OP}	0	MathCosh
1	0	${OP}	0	MathExp
1	0	${OP}	0	MathExpm1
1	0	${OP}	0	MathFloor
1	0	${OP}	0	MathIsValidNumber
1	0	${OP}	0	MathLog
1	0	${OP}	0	MathLog10
1	0	${OP}	0	MathLog1p
1	0	${OP}	0	MathMax
1	0	${OP}	0	MathMin
1	0	${OP}	0	MathMod
1	0	${OP}	0	MathPow
1	0	${OP}	0	MathRand
1	0	${OP}	0	MathRound
1	0	${OP}	0	MathSin
1	0	${OP}	0	MathSinh
1	0	${OP}	0	MathSqrt
1	0	${OP}	0	MathSrand
1	0	${OP}	0	MathSwap
1	0	${OP}	0	MathTan
1	0	${OP}	0	MathTanh
1	0	${OP}	0	acos
1	0	${OP}	0	acosh
1	0	${OP}	0	asin
1	0	${OP}	0	asinh
1	0	${OP}	0	atan
1	0	${OP}	0	atanh
1	0	${OP}	0	ceil
1	0	${OP}	0	cos
1	0	${OP}	0	cosh
1	0	${OP}	0	exp
1	0	${OP}	0	expm1
1	0	${OP}	0	fabs
1	0	${OP}	0	floor
1	0	${OP}	0	fmax
1	0	${OP}	0	fmin
1	0	${OP}	0	fmod
1	0	${OP}	0	log
1	0	${OP}	0	log10
1	0	${OP}	0	log1p
1	0	${OP}	0	pow
1	0	${OP}	0	rand
1	0	${OP}	0	round
1	0	${OP}	0	sin
1	0	${OP}	0	sinh
1	0	${OP}	0	sqrt
1	0	${OP}	0	srand
1	0	${OP}	0	tan
1	0	${OP}	0	tanh
;String Functions
1	0	${OP}	0	StringAdd
1	0	${OP}	0	StringBufferLen
1	0	${OP}	0	StringCompare
1	0	${OP}	0	StringConcatenate
1	0	${OP}	0	StringFill
1	0	${OP}	0	StringFind
1	0	${OP}	0	StringGetCharacter
1	0	${OP}	0	StringInit
1	0	${OP}	0	StringLen
1	0	${OP}	0	StringReplace
1	0	${OP}	0	StringReserve
1	0	${OP}	0	StringSetCharacter
1	0	${OP}	0	StringSetLength
1	0	${OP}	0	StringSplit
1	0	${OP}	0	StringSubstr
1	0	${OP}	0	StringToLower
1	0	${OP}	0	StringToUpper
1	0	${OP}	0	StringTrimLeft
1	0	${OP}	0	StringTrimRight
;Date and Time
1	0	${OP}	0	StructToTime
1	0	${OP}	0	TimeCurrent
1	0	${OP}	0	TimeDaylightSavings
1	0	${OP}	0	TimeGMT
1	0	${OP}	0	TimeGMTOffset
1	0	${OP}	0	TimeLocal
1	0	${OP}	0	TimeToStruct
1	0	${OP}	0	TimeTradeServer
;Account Information
1	0	${OP}	0	AccountInfoDouble
1	0	${OP}	0	AccountInfoInteger
1	0	${OP}	0	AccountInfoString
;Checkup
1	0	${OP}	0	Digits
1	0	${OP}	0	GetLastError
1	0	${OP}	0	IsStopped
1	0	${OP}	0	MQLInfoInteger
1	0	${OP}	0	MQLInfoString
1	0	${OP}	0	Period
1	0	${OP}	0	Point
1	0	${OP}	0	Symbol
1	0	${OP}	0	TerminalInfoDouble
1	0	${OP}	0	TerminalInfoInteger
1	0	${OP}	0	TerminalInfoString
1	0	${OP}	0	UninitializeReason
;Event Handling Functions
1	0	${OP}	0	OnBookEvent
1	0	${OP}	0	OnCalculate
1	0	${OP}	0	OnChartEvent
1	0	${OP}	0	OnDeinit
1	0	${OP}	0	OnInit
1	0	${OP}	0	OnStart
1	0	${OP}	0	OnTester
1	0	${OP}	0	OnTesterDeinit
1	0	${OP}	0	OnTesterInit
1	0	${OP}	0	OnTesterPass
1	0	${OP}	0	OnTick
1	0	${OP}	0	OnTimer
1	0	${OP}	0	OnTrade
1	0	${OP}	0	OnTradeTransaction
;Market Info
1	0	${OP}	0	MarketBookAdd
1	0	${OP}	0	MarketBookGet
1	0	${OP}	0	MarketBookRelease
1	0	${OP}	0	SymbolExist
1	0	${OP}	0	SymbolInfoDouble
1	0	${OP}	0	SymbolInfoInteger
1	0	${OP}	0	SymbolInfoMarginRate
1	0	${OP}	0	SymbolInfoSessionQuote
1	0	${OP}	0	SymbolInfoSessionTrade
1	0	${OP}	0	SymbolInfoString
1	0	${OP}	0	SymbolInfoTick
1	0	${OP}	0	SymbolIsSynchronized
1	0	${OP}	0	SymbolName
1	0	${OP}	0	SymbolSelect
1	0	${OP}	0	SymbolsTotal
;Economic calendar functions
1	0	${OP}	0	CalendarCountries
1	0	${OP}	0	CalendarCountryById
1	0	${OP}	0	CalendarEventByCountry
1	0	${OP}	0	CalendarEventByCurrency
1	0	${OP}	0	CalendarEventById
1	0	${OP}	0	CalendarValueById
1	0	${OP}	0	CalendarValueHistory
1	0	${OP}	0	CalendarValueHistoryByEvent
1	0	${OP}	0	CalendarValueLast
1	0	${OP}	0	CalendarValueLastByEvent
;Timeseries and Indicators Access
1	0	${OP}	0	Bars
1	0	${OP}	0	BarsCalculated
1	0	${OP}	0	CopyBuffer
1	0	${OP}	0	CopyClose
1	0	${OP}	0	CopyHigh
1	0	${OP}	0	CopyLow
1	0	${OP}	0	CopyOpen
1	0	${OP}	0	CopyRates
1	0	${OP}	0	CopyRealVolume
1	0	${OP}	0	CopySpread
1	0	${OP}	0	CopyTicks
1	0	${OP}	0	CopyTicksRange
1	0	${OP}	0	CopyTickVolume
1	0	${OP}	0	CopyTime
1	0	${OP}	0	iBars
1	0	${OP}	0	iBarShift
1	0	${OP}	0	iClose
1	0	${OP}	0	iHigh
1	0	${OP}	0	iHighest
1	0	${OP}	0	iLow
1	0	${OP}	0	iLowest
1	0	${OP}	0	IndicatorCreate
1	0	${OP}	0	IndicatorParameters
1	0	${OP}	0	IndicatorRelease
1	0	${OP}	0	iOpen
1	0	${OP}	0	iRealVolume
1	0	${OP}	0	iSpread
1	0	${OP}	0	iTickVolume
1	0	${OP}	0	iTime
1	0	${OP}	0	iVolume
1	0	${OP}	0	SeriesInfoInteger
;Custom symbols
1	0	${OP}	0	CustomBookAdd
1	0	${OP}	0	CustomRatesDelete
1	0	${OP}	0	CustomRatesReplace
1	0	${OP}	0	CustomRatesUpdate
1	0	${OP}	0	CustomSymbolCreate
1	0	${OP}	0	CustomSymbolDelete
1	0	${OP}	0	CustomSymbolSetDouble
1	0	${OP}	0	CustomSymbolSetInteger
1	0	${OP}	0	CustomSymbolSetMarginRate
1	0	${OP}	0	CustomSymbolSetSessionQuote
1	0	${OP}	0	CustomSymbolSetSessionTrade
1	0	${OP}	0	CustomSymbolSetString
1	0	${OP}	0	CustomTicksAdd
1	0	${OP}	0	CustomTicksDelete
1	0	${OP}	0	CustomTicksReplace
;Chart Operations
1	0	${OP}	0	ChartApplyTemplate
1	0	${OP}	0	ChartClose
1	0	${OP}	0	ChartFirst
1	0	${OP}	0	ChartGetDouble
1	0	${OP}	0	ChartGetInteger
1	0	${OP}	0	ChartGetString
1	0	${OP}	0	ChartID
1	0	${OP}	0	ChartIndicatorAdd
1	0	${OP}	0	ChartIndicatorDelete
1	0	${OP}	0	ChartIndicatorGet
1	0	${OP}	0	ChartIndicatorName
1	0	${OP}	0	ChartIndicatorsTotal
1	0	${OP}	0	ChartNavigate
1	0	${OP}	0	ChartNext
1	0	${OP}	0	ChartOpen
1	0	${OP}	0	ChartPeriod
1	0	${OP}	0	ChartPriceOnDropped
1	0	${OP}	0	ChartRedraw
1	0	${OP}	0	ChartSaveTemplate
1	0	${OP}	0	ChartScreenShot
1	0	${OP}	0	ChartSetDouble
1	0	${OP}	0	ChartSetInteger
1	0	${OP}	0	ChartSetString
1	0	${OP}	0	ChartSetSymbolPeriod
1	0	${OP}	0	ChartSymbol
1	0	${OP}	0	ChartTimeOnDropped
1	0	${OP}	0	ChartTimePriceToXY
1	0	${OP}	0	ChartWindowFind
1	0	${OP}	0	ChartWindowOnDropped
1	0	${OP}	0	ChartXOnDropped
1	0	${OP}	0	ChartXYToTimePrice
1	0	${OP}	0	ChartYOnDropped
;Trade Functions
1	0	${OP}	0	HistoryDealGetDouble
1	0	${OP}	0	HistoryDealGetInteger
1	0	${OP}	0	HistoryDealGetString
1	0	${OP}	0	HistoryDealGetTicket
1	0	${OP}	0	HistoryDealSelect
1	0	${OP}	0	HistoryDealsTotal
1	0	${OP}	0	HistoryOrderGetDouble
1	0	${OP}	0	HistoryOrderGetInteger
1	0	${OP}	0	HistoryOrderGetString
1	0	${OP}	0	HistoryOrderGetTicket
1	0	${OP}	0	HistoryOrderSelect
1	0	${OP}	0	HistoryOrdersTotal
1	0	${OP}	0	HistorySelect
1	0	${OP}	0	HistorySelectByPosition
1	0	${OP}	0	OrderCalcMargin
1	0	${OP}	0	OrderCalcProfit
1	0	${OP}	0	OrderCheck
1	0	${OP}	0	OrderGetDouble
1	0	${OP}	0	OrderGetInteger
1	0	${OP}	0	OrderGetString
1	0	${OP}	0	OrderGetTicket
1	0	${OP}	0	OrderSelect
1	0	${OP}	0	OrderSend
1	0	${OP}	0	OrderSendAsync
1	0	${OP}	0	OrdersTotal
1	0	${OP}	0	PositionGetDouble
1	0	${OP}	0	PositionGetInteger
1	0	${OP}	0	PositionGetString
1	0	${OP}	0	PositionGetSymbol
1	0	${OP}	0	PositionGetTicket
1	0	${OP}	0	PositionSelect
1	0	${OP}	0	PositionSelectByTicket
1	0	${OP}	0	PositionsTotal
;Trade Signals
1	0	${OP}	0	SignalBaseGetDouble
1	0	${OP}	0	SignalBaseGetInteger
1	0	${OP}	0	SignalBaseGetString
1	0	${OP}	0	SignalBaseSelect
1	0	${OP}	0	SignalBaseTotal
1	0	${OP}	0	SignalInfoGetDouble
1	0	${OP}	0	SignalInfoGetInteger
1	0	${OP}	0	SignalInfoGetString
1	0	${OP}	0	SignalInfoSetDouble
1	0	${OP}	0	SignalInfoSetInteger
1	0	${OP}	0	SignalSubscribe
1	0	${OP}	0	SignalUnsubscribe
;Network functions
1	0	${OP}	0	SendFTP
1	0	${OP}	0	SendMail
1	0	${OP}	0	SendNotification
1	0	${OP}	0	SocketClose
1	0	${OP}	0	SocketConnect
1	0	${OP}	0	SocketCreate
1	0	${OP}	0	SocketIsConnected
1	0	${OP}	0	SocketIsReadable
1	0	${OP}	0	SocketIsWritable
1	0	${OP}	0	SocketRead
1	0	${OP}	0	SocketSend
1	0	${OP}	0	SocketTimeouts
1	0	${OP}	0	SocketTlsCertificate
1	0	${OP}	0	SocketTlsHandshake
1	0	${OP}	0	SocketTlsRead
1	0	${OP}	0	SocketTlsReadAvailable
1	0	${OP}	0	SocketTlsSend
1	0	${OP}	0	WebRequest
;Global Variables of the Client Terminal
1	0	${OP}	0	GlobalVariableCheck
1	0	${OP}	0	GlobalVariableDel
1	0	${OP}	0	GlobalVariableGet
1	0	${OP}	0	GlobalVariableName
1	0	${OP}	0	GlobalVariablesDeleteAll
1	0	${OP}	0	GlobalVariableSet
1	0	${OP}	0	GlobalVariableSetOnCondition
1	0	${OP}	0	GlobalVariablesFlush
1	0	${OP}	0	GlobalVariablesTotal
1	0	${OP}	0	GlobalVariableTemp
1	0	${OP}	0	GlobalVariableTime
;File Functions
1	0	${OP}	0	FileClose
1	0	${OP}	0	FileCopy
1	0	${OP}	0	FileDelete
1	0	${OP}	0	FileFindClose
1	0	${OP}	0	FileFindFirst
1	0	${OP}	0	FileFindNext
1	0	${OP}	0	FileFlush
1	0	${OP}	0	FileGetInteger
1	0	${OP}	0	FileIsEnding
1	0	${OP}	0	FileIsExist
1	0	${OP}	0	FileIsLineEnding
1	0	${OP}	0	FileLoad
1	0	${OP}	0	FileMove
1	0	${OP}	0	FileOpen
1	0	${OP}	0	FileReadArray
1	0	${OP}	0	FileReadBool
1	0	${OP}	0	FileReadDatetime
1	0	${OP}	0	FileReadDouble
1	0	${OP}	0	FileReadFloat
1	0	${OP}	0	FileReadInteger
1	0	${OP}	0	FileReadLong
1	0	${OP}	0	FileReadNumber
1	0	${OP}	0	FileReadString
1	0	${OP}	0	FileReadStruct
1	0	${OP}	0	FileSave
1	0	${OP}	0	FileSeek
1	0	${OP}	0	FileSize
1	0	${OP}	0	FileTell
1	0	${OP}	0	FileWrite
1	0	${OP}	0	FileWriteArray
1	0	${OP}	0	FileWriteDouble
1	0	${OP}	0	FileWriteFloat
1	0	${OP}	0	FileWriteInteger
1	0	${OP}	0	FileWriteLong
1	0	${OP}	0	FileWriteString
1	0	${OP}	0	FileWriteStruct
1	0	${OP}	0	FolderClean
1	0	${OP}	0	FolderCreate
1	0	${OP}	0	FolderDelete
;Custom Indicators
1	0	${OP}	0	IndicatorSetDouble
1	0	${OP}	0	IndicatorSetInteger
1	0	${OP}	0	IndicatorSetString
1	0	${OP}	0	PlotIndexGetInteger
1	0	${OP}	0	PlotIndexSetDouble
1	0	${OP}	0	PlotIndexSetInteger
1	0	${OP}	0	PlotIndexSetString
1	0	${OP}	0	SetIndexBuffer
;Object Functions
1	0	${OP}	0	ObjectCreate
1	0	${OP}	0	ObjectDelete
1	0	${OP}	0	ObjectFind
1	0	${OP}	0	ObjectGetDouble
1	0	${OP}	0	ObjectGetInteger
1	0	${OP}	0	ObjectGetString
1	0	${OP}	0	ObjectGetTimeByValue
1	0	${OP}	0	ObjectGetValueByTime
1	0	${OP}	0	ObjectMove
1	0	${OP}	0	ObjectName
1	0	${OP}	0	ObjectsDeleteAll
1	0	${OP}	0	ObjectSetDouble
1	0	${OP}	0	ObjectSetInteger
1	0	${OP}	0	ObjectSetString
1	0	${OP}	0	ObjectsTotal
1	0	${OP}	0	TextGetSize
1	0	${OP}	0	TextOut
1	0	${OP}	0	TextSetFont
;Technical Indicator Functions
1	0	${OP}	0	iAC
1	0	${OP}	0	iAD
1	0	${OP}	0	iADX
1	0	${OP}	0	iADXWilder
1	0	${OP}	0	iAlligator
1	0	${OP}	0	iAMA
1	0	${OP}	0	iAO
1	0	${OP}	0	iATR
1	0	${OP}	0	iBands
1	0	${OP}	0	iBearsPower
1	0	${OP}	0	iBullsPower
1	0	${OP}	0	iBWMFI
1	0	${OP}	0	iCCI
1	0	${OP}	0	iChaikin
1	0	${OP}	0	iCustom
1	0	${OP}	0	iDEMA
1	0	${OP}	0	iDeMarker
1	0	${OP}	0	iEnvelopes
1	0	${OP}	0	iForce
1	0	${OP}	0	iFractals
1	0	${OP}	0	iFrAMA
1	0	${OP}	0	iGator
1	0	${OP}	0	iIchimoku
1	0	${OP}	0	iMA
1	0	${OP}	0	iMACD
1	0	${OP}	0	iMFI
1	0	${OP}	0	iMomentum
1	0	${OP}	0	iOBV
1	0	${OP}	0	iOsMA
1	0	${OP}	0	iRSI
1	0	${OP}	0	iRVI
1	0	${OP}	0	iSAR
1	0	${OP}	0	iStdDev
1	0	${OP}	0	iStochastic
1	0	${OP}	0	iTEMA
1	0	${OP}	0	iTriX
1	0	${OP}	0	iVIDyA
1	0	${OP}	0	iVolumes
1	0	${OP}	0	iWPR
;Working with Optimization Results
1	0	${OP}	0	FrameAdd
1	0	${OP}	0	FrameFilter
1	0	${OP}	0	FrameFirst
1	0	${OP}	0	FrameInputs
1	0	${OP}	0	FrameNext
1	0	${OP}	0	ParameterGetRange
1	0	${OP}	0	ParameterSetRange
;Event Functions
1	0	${OP}	0	EventChartCustom
1	0	${OP}	0	EventKillTimer
1	0	${OP}	0	EventSetMillisecondTimer
1	0	${OP}	0	EventSetTimer
;Working with OpenCL
1	0	${OP}	0	CLBufferCreate
1	0	${OP}	0	CLBufferFree
1	0	${OP}	0	CLBufferRead
1	0	${OP}	0	CLBufferWrite
1	0	${OP}	0	CLContextCreate
1	0	${OP}	0	CLContextFree
1	0	${OP}	0	CLExecute
1	0	${OP}	0	CLExecutionStatus
1	0	${OP}	0	CLGetDeviceInfo
1	0	${OP}	0	CLGetInfoInteger
1	0	${OP}	0	CLGetInfoString
1	0	${OP}	0	CLHandleType
1	0	${OP}	0	CLKernelCreate
1	0	${OP}	0	CLKernelFree
1	0	${OP}	0	CLProgramCreate
1	0	${OP}	0	CLProgramFree
1	0	${OP}	0	CLSetKernelArg
1	0	${OP}	0	CLSetKernelArgMem
1	0	${OP}	0	CLSetKernelArgMemLocal


;----------------------------------------------;
;                   CodeFold                   ;
;----------------------------------------------;

;Flags (sum of the members)
;       1  case sensitive.
;       2  force get fold name for function list from left at the fold start ("Folds:" section only).
;       4  force get fold name for function list from right at the fold start, including fold start ("Folds:" section only).
;       8  fold start ("Folds:" section) or skip start ("Skips:" section) located at line start.
;      16  fold start ("Folds:" section) or skip start ("Skips:" section) located at line end.
;      32  fold end ("Folds:" section) or skip end ("Skips:" section) located at line start.
;      64  fold end ("Folds:" section) or skip end ("Skips:" section) located at line end.
;     128  don't catch fold end ("Folds:" section) or skip end ("Skips:" section).
;     256  additional to 128 flag - more priority is given to sibling level instead of parent level ("Folds:" section only).
;     512  comment fold - fold ignore any other folds and skips inside ("Folds:" section only).
;    1024  reserved.
;    2048  deny fold - founded fold will be ignored ("Folds:" section only).
;    4096  xml fold - "<tag" and "</tag>", "<single" and "/>", "<single" and ">" ("Folds:" section only).
;    8192  don't check delimiters from left of fold start ("Folds:" section only).
;   16384  don't check delimiters from right of fold start ("Folds:" section only).
;   32768  don't check delimiters from left of fold end ("Folds:" section only).
;   65536  don't check delimiters from right of fold end ("Folds:" section only).
;  131072  deny delimiters ("Folds:" section only).
;  262144  don't show fold in list ("Folds:" section only).
; 1048576  regular expression in fold start ("Folds:" section) or skip start ("Skips:" section).
; 2097152  regular expression in fold end ("Folds:" section) or skip end ("Skips:" section). Backreference \101 matches \1 in fold start, \102 matches \2 and so on.


FoldPanel:
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;PanelFirstBkColor            PanelSecondBkColor             PanelNormalFoldColor             PanelActiveFoldColor             PanelNormalNodeOpenBkColor             PanelNormalNodeCloseBkColor             PanelActiveNodeOpenBkColor             PanelActiveNodeCloseBkColor             PanelNormalNodeOpenSignColor             PanelNormalNodeCloseSignColor             PanelActiveNodeOpenSignColor             PanelActiveNodeCloseSignColor
;=================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${CodeFold_PanelFirstBkColor} ${CodeFold_PanelSecondBkColor} ${CodeFold_PanelNormalFoldColor} ${CodeFold_PanelActiveFoldColor} ${CodeFold_PanelNormalNodeOpenBkColor} ${CodeFold_PanelNormalNodeCloseBkColor} ${CodeFold_PanelActiveNodeOpenBkColor} ${CodeFold_PanelActiveNodeCloseBkColor} ${CodeFold_PanelNormalNodeOpenSignColor} ${CodeFold_PanelNormalNodeCloseSignColor} ${CodeFold_PanelActiveNodeOpenSignColor} ${CodeFold_PanelActiveNodeCloseSignColor}


FoldList:
;================================================
;ListTextColor            ListBkColor
;================================================
${CodeFold_ListTextColor} ${CodeFold_ListBkColor}


TagMark:
;============================================================================================================
;TagMarkFlags            TagMarkFontStyle             TagMarkTextColor             TagMarkBkColor
;============================================================================================================
${CodeFold_TagMarkFlags} ${CodeFold_TagMarkFontStyle} ${CodeFold_TagMarkTextColor} ${CodeFold_TagMarkBkColor}


Skips:
;=============================
;Flags  Skip    Skip    Escape
;       start   end     char
;=============================
1	`"`	`"`	"\"
1	`'`	`'`	"\"
1	"//"	""	":"


Folds:
;===========================================================================
;Flags  Font    Color   Color   Fold   Fold   Deli      Parent  Rule    Rule
;       style   text    bkgrnd  start  end    miters    ID      ID      file
;===========================================================================
1	0	0	0	"{"	"}"			""		0	0
;513=1+512
513	3	${COMM}	0	"/*"	"*/"			""		0	0
;--switch...case...default--
;169=1+8+32+128
169	0	0	0	"case"		"case"		" 	"	0	0
;169=1+8+32+128
169	0	0	0	"case"		"default"	" 	:"	0	0
;169=1+8+32+128
169	0	0	0	"default"	"case"		" 	:"	0	0
;98441=1+8+128+32768+65536
98441	0	0	0	"case"		"}"		" 	:"	0	0
;98441=1+8+128+32768+65536
98441	0	0	0	"default"	"}"		" 	:"	0	0
;--Preprocessor directives--
;41=1+8+32
41	0	0	0	"#ifdef"	"#endif"	" 	"	0	0
;425=1+8+32+128+256
425	0	0	0	"#ifdef"	"#else"		" 	"	0	0
;41=1+8+32
41	0	0	0	"#ifndef"	"#endif"	" 	"	0	0
;425=1+8+32+128+256
425	0	0	0	"#ifndef"	"#else"		" 	"	0	0
;41=1+8+32
41	0	0	0	"#if"		"#endif"	" 	"	0	0
;425=1+8+32+128+256
425	0	0	0	"#if"		"#else"		" 	"	0	0
;41=1+8+32
41	0	0	0	"#else"		"#endif"	" 	"	0	0


;----------------------------------------------;
;                 AutoComplete                 ;
;----------------------------------------------;

;Flags (sum of the members)
;  1  force case sensitive.
;  2  force case insensitive.
;  4  regular expression (only for "$="). Scan starts from caret line beginning and metacharacters \a or \z specified caret position.
;  8  Don't show in listbox.


CompleteList:
;=====================================================================================================================================================================================================================================================================================================================================================================================================================================================================
;ListFontStyle                ListFontSize                 ListFaceName                 ListLineGap                 ListBlockIcon `"C:\1.dll", 0` ListBlockIconMargins "left;right"    ListHlBaseIcon `"C:\1.dll", 0` ListHlBaseIconMargins "left;right"    ListDocWordIcon `"C:\1.dll", 0` ListDocWordIconMargins "left;right"    ListBasicTextColor                 ListBasicBkColor                 ListSelTextColor                 ListSelBkColor
;=====================================================================================================================================================================================================================================================================================================================================================================================================================================================================
${AutoComplete_ListFontStyle} ${AutoComplete_ListFontSize} ${AutoComplete_ListFaceName} ${AutoComplete_ListLineGap} ${AutoComplete_ListBlockIcon} ${AutoComplete_ListBlockIconMargins} ${AutoComplete_ListHlBaseIcon} ${AutoComplete_ListHlBaseIconMargins} ${AutoComplete_ListDocWordIcon} ${AutoComplete_ListDocWordIconMargins} ${AutoComplete_ListBasicTextColor} ${AutoComplete_ListBasicBkColor} ${AutoComplete_ListSelTextColor} ${AutoComplete_ListSelBkColor}


Blocks:
;=============================================================================
;Abbreviations and blocks
;
; $~abbr         normal abbreviation.
; $(flags)~abbr  normal abbreviation with flags.
; $=abbr         exact abbreviation. May contain delimiters.
; $(flags)=abbr  exact abbreviation with flags. May contain delimiters.
; $[]            set caret to this position. Can be multiple (hot spots).
; $[text]        select text. Can be multiple (hot spots).
; $$             symbol $.
; $\]            escape symbol ]. Can be used in $[text] block: $[One [1$\] ].
; ${VAR}         variable assigned from Coder::Settings.
; $;             comment line.
;=============================================================================
$~class
class $[]
{
${AutoComplete_Indent}$[]
};

$~do
do
{
${AutoComplete_Indent}$[]
}
while ($[]);

$~for
for ($[]; $[]; $[])
{
${AutoComplete_Indent}$[]
}

$~if
if ($[])
{
${AutoComplete_Indent}$[]
}

$~struct
typedef struct {
${AutoComplete_Indent}$[]
} $[];

$~switch
switch ($[])
{
${AutoComplete_Indent}case $[]:
${AutoComplete_Indent}${AutoComplete_Indent}$[]
${AutoComplete_Indent}${AutoComplete_Indent}break;
${AutoComplete_Indent}case $[]:
${AutoComplete_Indent}${AutoComplete_Indent}$[]
${AutoComplete_Indent}${AutoComplete_Indent}break;
${AutoComplete_Indent}default:
${AutoComplete_Indent}${AutoComplete_Indent}$[]
${AutoComplete_Indent}${AutoComplete_Indent}break;
}

$~while
while ($[])
{
${AutoComplete_Indent}$[]
}
